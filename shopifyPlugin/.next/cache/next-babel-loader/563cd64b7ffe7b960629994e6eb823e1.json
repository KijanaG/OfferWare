{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Page, Layout, TextStyle, EmptyState, Spinner } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      loading: true\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const idsFromResources = resources.selection.map(product => product.id);\n      this.setState({\n        open: false\n      });\n      console.log(idsFromResources);\n      store.set('ids', idsFromResources);\n    });\n\n    _defineProperty(this, \"fetchProducts\", () => {\n      console.log(\"IN Here fetchProducts()\");\n      fetch('/api/products').then(res => res.json()).then(response => console.log(response)).catch(err => console.log(err));\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"Did MOUNT\");\n    this.fetchProducts();\n  }\n\n  componentWillUnmount() {\n    console.log(\"UNMOUNTINGIGNIG\");\n  }\n\n  render() {\n    const emptyState = !store.get('ids');\n    const {\n      loading\n    } = this.state;\n    if (loading) return __jsx(Page, null, __jsx(Layout, null, __jsx(EmptyState, {\n      centeredLayout: true,\n      heading: 'Fetching Products from Database...'\n    }, __jsx(Spinner, {\n      accessibilityLabel: \"Spinner\",\n      size: \"large\",\n      color: \"inkLightest\"\n    }))));\n    return __jsx(Page, null, __jsx(TitleBar, {\n      primaryAction: {\n        content: 'Select services',\n        onAction: () => this.setState({\n          open: true\n        })\n      }\n    }), __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      })\n    }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n      heading: \"Send Vouchers to your customers to be redeemed in-store.\",\n      action: {\n        content: 'Select Services',\n        onAction: () => this.setState({\n          open: true\n        })\n      },\n      image: img\n    }, __jsx(\"p\", null, \"Select products/services for which to send vouchers to customers via email.\"))) : __jsx(ResourceListWithProducts, null));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/pages/index.js"],"names":["Page","Layout","TextStyle","EmptyState","Spinner","ResourcePicker","TitleBar","store","ResourceListWithProducts","img","Index","React","Component","open","loading","resources","idsFromResources","selection","map","product","id","setState","console","log","set","fetch","then","res","json","response","catch","err","componentDidMount","fetchProducts","componentWillUnmount","render","emptyState","get","state","content","onAction","handleSelection"],"mappings":"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","sourcesContent":["import { Page, Layout, TextStyle, EmptyState, Spinner } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n    state = { open: false, loading: true };\n\n    componentDidMount() {\n        console.log(\"Did MOUNT\")\n        this.fetchProducts();\n    }\n\n    componentWillUnmount() {\n        console.log(\"UNMOUNTINGIGNIG\")\n    }\n    render() {\n        const emptyState = !store.get('ids');\n        const { loading } = this.state;\n        if (loading) return (\n            <Page>\n                <Layout>\n                    <EmptyState centeredLayout heading={'Fetching Products from Database...'}>\n                        <Spinner accessibilityLabel=\"Spinner\" size=\"large\" color=\"inkLightest\" />\n                    </EmptyState>\n                </Layout>\n            </Page>\n        )\n        return (\n            <Page>\n                <TitleBar\n                    primaryAction={{\n                        content: 'Select services',\n                        onAction: () => this.setState({ open: true })\n                    }} />\n                <ResourcePicker\n                    resourceType=\"Product\"\n                    showVariants={false}\n                    open={this.state.open}\n                    onSelection={(resources) => this.handleSelection(resources)}\n                    onCancel={() => this.setState({ open: false })}\n                />\n                {emptyState ? (\n                    <Layout>\n                        {/* <TextStyle variation=\"positive\">Let's get this BREAD AAASSSAAAPPP</TextStyle> */}\n                        <EmptyState\n                            heading=\"Send Vouchers to your customers to be redeemed in-store.\"\n                            action={{\n                                content: 'Select Services',\n                                onAction: () => this.setState({ open: true })\n                            }}\n                            image={img}>\n                            <p>Select products/services for which to send vouchers to customers via email.</p>\n                        </EmptyState>\n                    </Layout>\n                ) : (\n                        <ResourceListWithProducts />\n                    )}\n            </Page>\n        );\n    }\n    handleSelection = (resources) => {\n        const idsFromResources = resources.selection.map((product) => product.id)\n        this.setState({ open: false })\n        console.log(idsFromResources)\n        store.set('ids', idsFromResources)\n    }\n    fetchProducts = () => {\n        console.log(\"IN Here fetchProducts()\")\n        fetch('/api/products')\n            .then(res => res.json())\n            .then(response => console.log(response))\n            .catch(err => console.log(err))\n    }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}