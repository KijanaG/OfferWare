{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, Form, FormLayout, Frame, Layout, Page, Subheading, TextStyle, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport axios from 'axios';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      businessName: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      state: '',\n      merchantDescription: '',\n      email: '',\n      errorCheck: false,\n      primaryLoad: false,\n      secondaryLoad: false,\n      showToast: false,\n      status: true\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", async product => {\n      this.setState({\n        errorCheck: true\n      });\n      let {\n        businessName,\n        streetAddress,\n        city,\n        zipCode,\n        state,\n        merchantDescription,\n        email\n      } = this.state;\n      businessName = businessName.trim();\n      streetAddress = streetAddress.trim();\n      merchantDescription = merchantDescription.trim();\n      city = city.trim();\n      state = state.trim();\n\n      if (businessName.length && streetAddress.length && city.length && state.length && merchantDescription.length && zipCode && email.length) {\n        axios.post('/api/map', {\n          streetAddress,\n          city,\n          zipCode,\n          state\n        }).then(res => {\n          this.setState({\n            primaryLoad: true\n          });\n          let {\n            lat,\n            lng\n          } = res.data.coords;\n\n          if (!lat && !lng) {\n            alert(\"Address did not return a lat/lng. Please edit the addess format.\");\n            return;\n          }\n\n          let updatedProduct = _objectSpread({}, product, {\n            businessName,\n            streetAddress,\n            merchantDescription,\n            city,\n            state,\n            zipCode,\n            email,\n            coords: {\n              lat,\n              lng\n            }\n          });\n\n          axios.put('/api/products', {\n            product: updatedProduct\n          }).then(res => {\n            this.setState({\n              showToast: true,\n              status: true\n            });\n            let redirect = Redirect.create(this.context);\n            redirect.dispatch(Redirect.Action.APP, '/index');\n          }).catch(err => {\n            this.setState({\n              showToast: true,\n              status: false,\n              primaryLoad: false\n            });\n          });\n        }).catch(err => {\n          console.log(err);\n          alert(\"Address did not return a lat/lng. Please edit the addess format.\");\n          return;\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    let product = store.get('product');\n    this.setState({\n      businessName: product.businessName ? product.businessName : '',\n      streetAddress: product.streetAddress ? product.streetAddress : '',\n      city: product.city ? product.city : '',\n      zipCode: product.zipCode ? product.zipCode : '',\n      state: product.state ? product.state : '',\n      merchantDescription: product.merchantDescription ? product.merchantDescription : '',\n      email: product.email ? product.email : '{{Auto-Generated Link}}'\n    });\n  }\n\n  render() {\n    const app = this.context;\n    let {\n      errorCheck,\n      businessName,\n      streetAddress,\n      city,\n      zipCode,\n      status,\n      state,\n      merchantDescription,\n      email,\n      primaryLoad,\n      secondaryLoad,\n      showToast\n    } = this.state;\n    businessName = businessName.trim();\n    streetAddress = streetAddress.trim();\n    email = email.trim();\n    merchantDescription = merchantDescription.trim();\n    city = city.trim();\n    state = state.trim();\n    const product = store.get('product');\n\n    const redirectToHome = () => {\n      this.setState({\n        secondaryLoad: true\n      });\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/index');\n    };\n\n    return __jsx(Frame, null, __jsx(Page, null, __jsx(Frame, null, __jsx(Layout, null, __jsx(Layout.Section, null, showToast && __jsx(Toast, {\n      content: status ? \"Successfully uploaded.\" : \"Failed To Upload, Please Try Again.\",\n      onDismiss: () => this.setState({\n        showToast: false\n      })\n    }), __jsx(Form, {\n      preventDefault: true\n    }, __jsx(Card, {\n      sectioned: true,\n      title: `Voucher Display Form: ${product ? product.title : ''}`,\n      secondaryFooterActions: [{\n        content: 'Return To List',\n        onAction: () => {\n          redirectToHome();\n        },\n        loading: secondaryLoad\n      }],\n      primaryFooterAction: {\n        content: 'Save',\n        onAction: () => {\n          this.handleSubmit(product);\n        },\n        loading: primaryLoad\n      }\n    }, __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, \"Fill in the data below for the merchant corresponding to this product.\"), \" \", __jsx(\"br\", null), __jsx(\"br\", null), __jsx(FormLayout, null, __jsx(TextField, {\n      autoFocus: true,\n      prefix: \"\",\n      value: this.state.businessName,\n      onChange: this.handleChange('businessName'),\n      label: \"Merchant's Name \\u2013 As displayed in Google Maps\",\n      type: \"text\",\n      placeholder: \"Bob's Burger Shack\",\n      maxLength: 150,\n      error: errorCheck && !businessName.length ? \"Merchant's name is required.\" : null\n    }), __jsx(TextField, {\n      error: errorCheck && !merchantDescription.length ? \"Merchant description is required.\" : null,\n      prefix: \"\",\n      value: this.state.merchantDescription,\n      onChange: this.handleChange('merchantDescription'),\n      label: \"Merchant Description\",\n      type: \"text\",\n      maxLength: 800,\n      showCharacterCount: true,\n      spellCheck: true,\n      multiline: true,\n      placeholder: \"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\"\n    }), __jsx(TextField, {\n      error: errorCheck && !email.length ? \"Email to customer is required.\" : null,\n      prefix: \"\",\n      value: this.state.email,\n      onChange: this.handleChange('email'),\n      label: \"Email\",\n      type: \"text\",\n      maxLength: 800,\n      showCharacterCount: true,\n      spellCheck: true,\n      multiline: true,\n      placeholder: \"Thank you for your purchase! Enjoy!\"\n    }), __jsx(Subheading, null, \"Address\"), __jsx(FormLayout.Group, {\n      condensed: true\n    }, __jsx(TextField, {\n      error: errorCheck && !streetAddress.length ? \"Street address is required.\" : null,\n      maxLength: 75,\n      prefix: \"\",\n      value: this.state.streetAddress,\n      onChange: this.handleChange('streetAddress'),\n      label: \"Street Address\",\n      type: \"text\",\n      placeholder: \"48185 Washington Blvd.\"\n    }), __jsx(TextField, {\n      error: errorCheck && !city.length ? \"City name is required.\" : null,\n      maxLength: 50,\n      prefix: \"\",\n      value: this.state.city,\n      onChange: this.handleChange('city'),\n      label: \"City\",\n      type: \"text\",\n      label: \"City\",\n      placeholder: \"Seattle\"\n    }), __jsx(TextField, {\n      error: errorCheck && !zipCode ? \"Zip code is required.\" : null,\n      maxLength: 5,\n      prefix: \"\",\n      label: \"Zip Code\",\n      value: this.state.zipCode,\n      onChange: this.handleChange('zipCode'),\n      placeholder: \"90210\",\n      type: \"number\"\n    }), __jsx(TextField, {\n      error: errorCheck && !state.length ? \"State is required.\" : null,\n      maxLength: 2,\n      prefix: \"\",\n      label: \"State\",\n      value: this.state.state,\n      onChange: this.handleChange('state'),\n      placeholder: \"WA\"\n    }))))))))));\n  }\n\n}\n\n_defineProperty(EditProduct, \"contextType\", Context);\n\nexport default EditProduct; // const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/pages/edit-products.js"],"names":["Card","Form","FormLayout","Frame","Layout","Page","Subheading","TextStyle","TextField","Toast","store","axios","Redirect","Context","EditProduct","React","Component","businessName","streetAddress","city","zipCode","state","merchantDescription","email","errorCheck","primaryLoad","secondaryLoad","showToast","status","field","value","setState","product","trim","length","post","then","res","lat","lng","data","coords","alert","updatedProduct","put","redirect","create","context","dispatch","Action","APP","catch","err","console","log","componentDidMount","get","render","app","redirectToHome","title","content","onAction","loading","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import { Card, Form, FormLayout, Frame, Layout, Page, Subheading, TextStyle, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport axios from 'axios';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nclass EditProduct extends React.Component {\n   state = {\n      businessName: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      state: '',\n      merchantDescription: '',\n      email: '',\n      errorCheck: false,\n      primaryLoad: false,\n      secondaryLoad: false,\n      showToast: false,\n      status: true\n   };\n\n   static contextType = Context;\n\n   componentDidMount() {\n      let product = store.get('product')\n      this.setState({\n         businessName: product.businessName ? product.businessName : '',\n         streetAddress: product.streetAddress ? product.streetAddress : '',\n         city: product.city ? product.city : '',\n         zipCode: product.zipCode ? product.zipCode : '',\n         state: product.state ? product.state : '',\n         merchantDescription: product.merchantDescription ? product.merchantDescription : '',\n         email: product.email ? product.email : '{{Auto-Generated Link}}'\n      })\n   }\n\n   render() {\n      const app = this.context;\n      let { errorCheck, businessName, streetAddress, city, zipCode, status,\n         state, merchantDescription, email, primaryLoad, secondaryLoad, showToast } = this.state;\n      businessName = businessName.trim(); streetAddress = streetAddress.trim(); email = email.trim();\n      merchantDescription = merchantDescription.trim(); city = city.trim(); state = state.trim();\n      const product = store.get('product');\n      const redirectToHome = () => {\n         this.setState({ secondaryLoad: true })\n         const redirect = Redirect.create(app);\n         redirect.dispatch(Redirect.Action.APP, '/index');\n      }\n      return (\n         <Frame>\n            <Page>\n               <Frame>\n                  <Layout>\n                     <Layout.Section>\n                        {showToast && (\n                           <Toast content={status ? \"Successfully uploaded.\" : \"Failed To Upload, Please Try Again.\"}\n                              onDismiss={() => this.setState({ showToast: false })} />\n                        )}\n                        <Form preventDefault={true}>\n                           <Card sectioned title={`Voucher Display Form: ${product ? product.title : ''}`}\n                              secondaryFooterActions={[{ content: 'Return To List', onAction: () => { redirectToHome() }, loading: secondaryLoad }]}\n                              primaryFooterAction={{ content: 'Save', onAction: () => { this.handleSubmit(product) }, loading: primaryLoad }} >\n                              <TextStyle variation=\"subdued\">Fill in the data below for the merchant corresponding to this product.</TextStyle> <br /><br />\n                              <FormLayout>\n                                 <TextField autoFocus={true} prefix=\"\" value={this.state.businessName} onChange={this.handleChange('businessName')}\n                                    label=\"Merchant's Name – As displayed in Google Maps\" type=\"text\" placeholder=\"Bob's Burger Shack\" maxLength={150}\n                                    error={errorCheck && !businessName.length ? \"Merchant's name is required.\" : null} />\n                                 <TextField error={errorCheck && !merchantDescription.length ? \"Merchant description is required.\" : null} prefix=\"\" value={this.state.merchantDescription}\n                                    onChange={this.handleChange('merchantDescription')} label=\"Merchant Description\" type=\"text\" maxLength={800}\n                                    showCharacterCount={true} spellCheck={true} multiline={true}\n                                    placeholder=\"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\" />\n                                 <TextField error={errorCheck && !email.length ? \"Email to customer is required.\" : null} prefix=\"\" value={this.state.email}\n                                    onChange={this.handleChange('email')} label=\"Email\" type=\"text\" maxLength={800} showCharacterCount={true} spellCheck={true} multiline={true} placeholder=\"Thank you for your purchase! Enjoy!\" />\n                                 <Subheading>Address</Subheading>\n                                 <FormLayout.Group condensed>\n                                    <TextField error={errorCheck && !streetAddress.length ? \"Street address is required.\" : null} maxLength={75} prefix=\"\" value={this.state.streetAddress} onChange={this.handleChange('streetAddress')}\n                                       label=\"Street Address\" type=\"text\" placeholder=\"48185 Washington Blvd.\" />\n                                    <TextField error={errorCheck && !city.length ? \"City name is required.\" : null} maxLength={50} prefix=\"\" value={this.state.city} onChange={this.handleChange('city')}\n                                       label=\"City\" type=\"text\" label=\"City\" placeholder=\"Seattle\" />\n                                    <TextField error={errorCheck && !zipCode ? \"Zip code is required.\" : null} maxLength={5} prefix=\"\" label=\"Zip Code\" value={this.state.zipCode} onChange={this.handleChange('zipCode')}\n                                       placeholder=\"90210\" type=\"number\" />\n                                    <TextField error={errorCheck && !state.length ? \"State is required.\" : null} maxLength={2} prefix=\"\" label=\"State\" value={this.state.state} onChange={this.handleChange('state')}\n                                       placeholder=\"WA\" />\n                                 </FormLayout.Group>\n                              </FormLayout>\n                           </Card>\n                        </Form>\n                     </Layout.Section>\n                  </Layout>\n               </Frame>\n            </Page>\n         </Frame>\n      );\n   }\n\n   handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n   }\n   handleSubmit = async (product) => {\n      this.setState({ errorCheck: true });\n      let { businessName, streetAddress, city, zipCode, state, merchantDescription, email } = this.state;\n      businessName = businessName.trim(); streetAddress = streetAddress.trim();\n      merchantDescription = merchantDescription.trim(); city = city.trim(); state = state.trim();\n      if (businessName.length && streetAddress.length && city.length &&\n         state.length && merchantDescription.length && zipCode && email.length) {\n         axios.post('/api/map', { streetAddress, city, zipCode, state })\n            .then(res => {\n               this.setState({ primaryLoad: true });\n               let { lat, lng } = res.data.coords;\n               if (!lat && !lng) {\n                  alert(\"Address did not return a lat/lng. Please edit the addess format.\");\n                  return\n               }\n               let updatedProduct = { ...product, businessName, streetAddress, merchantDescription, city, state, zipCode, email, coords: { lat, lng } }\n               axios.put('/api/products', { product: updatedProduct })\n                  .then(res => {\n                     this.setState({ showToast: true, status: true })\n                     let redirect = Redirect.create(this.context)\n                     redirect.dispatch(Redirect.Action.APP, '/index')\n                  }).catch(err => {\n                     this.setState({ showToast: true, status: false, primaryLoad: false })\n                  })\n            })\n            .catch(err => {\n               console.log(err)\n               alert(\"Address did not return a lat/lng. Please edit the addess format.\");\n               return\n            })\n      }\n   }\n}\n\nexport default EditProduct;\n\n// const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;\n"]},"metadata":{},"sourceType":"module"}