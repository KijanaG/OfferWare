{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation productVariantUpdate($input: ProductVariantInput!) {\\n    productVariantUpdate(input: $input) {\\n      product {\\n        title\\n      }\\n      productVariant {\\n        id\\n        price\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nvar EditProduct = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  var _super = _createSuper(EditProduct);\n\n  function EditProduct() {\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        discount: this.itemToBeConsumed()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          price = _this$state.price,\n          discount = _this$state.discount,\n          variantId = _this$state.variantId;\n      return __jsx(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n\n        var showError = error && __jsx(Banner, {\n          status: \"critical\"\n        }, error.message);\n\n        var showToast = data && data.productVariantUpdate && __jsx(Toast, {\n          content: \"Successfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n\n        return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, showToast, __jsx(Layout.Section, null, showError), __jsx(Layout.Section, null, __jsx(DisplayText, {\n          size: \"large\"\n        }, name), __jsx(Form, null, __jsx(Card, {\n          sectioned: true\n        }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n          prefix: \"$\",\n          value: price,\n          disabled: true,\n          label: \"Original price\",\n          type: \"price\"\n        }), __jsx(TextField, {\n          prefix: \"$\",\n          value: discount,\n          onChange: _this2.handleChange('discount'),\n          label: \"Discounted price\",\n          type: \"discount\"\n        })), __jsx(\"p\", null, \" This sale price will expire in two weeks \"))), __jsx(PageActions, {\n          primaryAction: [{\n            content: 'Save',\n            onAction: function onAction() {\n              var productVariableInput = {\n                id: variantId,\n                price: discount\n              };\n              handleSubmit({\n                variables: {\n                  input: productVariableInput\n                }\n              });\n            }\n          }],\n          secondaryActions: [{\n            content: 'Remove discount'\n          }]\n        }))))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;\nvar UPDATE_PRICE = gql(_templateObject());","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","store","gql","Mutation","EditProduct","discount","price","variantId","showToast","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","itemToBeConsumed","state","name","UPDATE_PRICE","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","variables","input","React","Component"],"mappings":"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","sourcesContent":["import { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nclass EditProduct extends React.Component {\n   state = {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false,\n   };\n\n   componentDidMount() {\n      this.setState({ discount: this.itemToBeConsumed() });\n   }\n\n   render() {\n      const { name, price, discount, variantId } = this.state;\n      return (\n         <Mutation\n            mutation={UPDATE_PRICE} >\n            {(handleSubmit, { error, data }) => {\n               const showError = error && (\n                  <Banner status=\"critical\">{error.message}</Banner>\n               );\n               const showToast = data && data.productVariantUpdate && (\n                  <Toast content=\"Successfully updated\" onDismiss={() => this.setState({ showToast: false })} />\n               );\n               return (\n                  <Frame>\n                     <Page>\n                        <Layout>\n                           {showToast}\n                           <Layout.Section>\n                              {showError}\n                           </Layout.Section>\n                           <Layout.Section>\n                              <DisplayText size=\"large\">{name}</DisplayText>\n                              <Form>\n                                 <Card sectioned>\n                                    <FormLayout>\n                                       <FormLayout.Group>\n                                          <TextField prefix=\"$\" value={price} disabled={true}\n                                             label=\"Original price\" type=\"price\" />\n                                          <TextField prefix=\"$\" value={discount} onChange={this.handleChange('discount')}\n                                             label=\"Discounted price\" type=\"discount\" />\n                                       </FormLayout.Group>\n                                       <p> This sale price will expire in two weeks </p>\n                                    </FormLayout>\n                                 </Card>\n                                 <PageActions\n                                    primaryAction={[{\n                                       content: 'Save', onAction: () => {\n                                          const productVariableInput = {\n                                             id: variantId,\n                                             price: discount,\n                                          };\n                                          handleSubmit({\n                                             variables: { input: productVariableInput }\n                                          });\n                                       }\n                                    }]}\n                                    secondaryActions={[{ content: 'Remove discount' }]} />\n                              </Form>\n                           </Layout.Section>\n                        </Layout>\n                     </Page>\n                  </Frame>\n               );\n            }}\n         </Mutation>\n      );\n   }\n\n   handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n   }\n\n   itemToBeConsumed = () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({ price, variantId });\n      return (price - discounter).toFixed(2);\n   }\n}\n\nexport default EditProduct;\n\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}