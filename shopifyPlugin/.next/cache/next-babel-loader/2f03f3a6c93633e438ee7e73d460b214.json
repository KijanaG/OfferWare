{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        descriptionHtml\\n        id\\n        variants(first:4){\\n          edges{\\n            node{\\n              compareAtPrice\\n              price\\n              title\\n            }\\n          }\\n        }\\n        images(first: 10) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail, Button, Form } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      updating: {},\n      loading: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpload\", function (id) {\n      console.log(id);\n\n      var updating = _objectSpread({}, _this.state.updating);\n\n      updating[id] = true;\n\n      _this.setState({\n        updating: updating\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      console.log(this.state);\n      return __jsx(Card, null, __jsx(ResourceList, {\n        showHeader: true,\n        resourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: this.props.products,\n        renderItem: function renderItem(item) {\n          var complete = false;\n\n          if (item.streetAddress && item.city && item.email && item.zipCode && item.state && item.businessName && item.merchantDescription) {\n            complete = true;\n          }\n\n          var media = __jsx(Thumbnail, {\n            source: item.images[0] ? item.images[0].originalSrc : '',\n            alt: item.images[0] ? item.images[0].altText : ''\n          });\n\n          return __jsx(ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: \"View details for \".concat(item.title)\n          }, __jsx(Stack, null, __jsx(Stack.Item, {\n            fill: true\n          }, __jsx(\"h3\", null, \" \", __jsx(TextStyle, {\n            variation: \"strong\"\n          }, \" \", item.title, \" \"), \" \")), __jsx(Stack.Item, null, _this2.state.updating[item.id] ? __jsx(Button, {\n            loading: true,\n            primary: true\n          }, \"Update Item\") : __jsx(Form, {\n            onSubmit: function onSubmit() {\n              return _this2.handleUpload(item.id);\n            },\n            preventDefault: true\n          }, __jsx(Button, {\n            submit: true,\n            primary: true\n          }, \"Update Item\")), \"\\xA0 12/30 \\xA0\", __jsx(\"div\", {\n            style: {\n              color: complete ? \"green\" : \"red\"\n            }\n          }, __jsx(Button, {\n            monochrome: true,\n            outline: true,\n            onClick: function onClick() {\n              store.set('product', item);\n              redirectToProduct();\n            }\n          }, complete ? \"Complete\" : \"Incomplete\", \" \")))));\n        }\n      }));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/components/ResourceList.js"],"names":["Card","ResourceList","Stack","TextStyle","Thumbnail","Button","Form","store","Redirect","Context","gql","Query","ResourceListWithProducts","updating","loading","id","console","log","state","setState","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","singular","plural","props","products","item","complete","streetAddress","city","email","zipCode","businessName","merchantDescription","media","images","originalSrc","altText","title","handleUpload","color","set","React","Component","GET_PRODUCTS_BY_ID"],"mappings":"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","sourcesContent":["import { Card, ResourceList, Stack, TextStyle, Thumbnail, Button, Form } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nclass ResourceListWithProducts extends React.Component {\n    state = {\n        updating: {},\n        loading: {}\n    }\n    static contextType = Context;\n    handleUpload = (id) => {\n        console.log(id)\n        let updating = { ...this.state.updating }\n        updating[id] = true\n        this.setState({ updating })\n    }\n    render() {\n        const app = this.context;\n        const redirectToProduct = () => {\n            const redirect = Redirect.create(app);\n            redirect.dispatch(\n                Redirect.Action.APP,\n                '/edit-products',\n            )\n        }\n        console.log(this.state)\n        return (\n            <Card>\n                <ResourceList showHeader resourceName={{ singular: 'Product', plural: 'Products' }}\n                    items={this.props.products}\n                    renderItem={(item) => {\n                        let complete = false;\n                        if (item.streetAddress && item.city && item.email && item.zipCode\n                            && item.state && item.businessName && item.merchantDescription) {\n                            complete = true\n                        }\n                        const media = (\n                            <Thumbnail\n                                source={item.images[0] ? item.images[0].originalSrc : ''}\n                                alt={item.images[0] ? item.images[0].altText : ''} />\n                        );\n                        return (\n                            <ResourceList.Item id={item.id} media={media}\n                                accessibilityLabel={`View details for ${item.title}`} >\n                                <Stack>\n                                    <Stack.Item fill>\n                                        <h3> <TextStyle variation=\"strong\"> {item.title} </TextStyle> </h3>\n                                    </Stack.Item>\n                                    <Stack.Item>\n                                        {this.state.updating[item.id] ?\n                                            <Button loading={true} primary>Update Item</Button>\n                                            :\n                                            <Form onSubmit={() => this.handleUpload(item.id)} preventDefault={true}>\n                                                <Button submit primary>Update Item</Button>\n                                            </Form>\n                                        }\n                                    &nbsp; 12/30 &nbsp;\n                                    <div style={{ color: complete ? \"green\" : \"red\" }}>\n                                            <Button monochrome outline onClick={() => { store.set('product', item); redirectToProduct(); }}>{complete ? \"Complete\" : \"Incomplete\"} </Button>\n                                        </div>\n                                    </Stack.Item>\n                                </Stack>\n                            </ResourceList.Item>\n                        );\n                    }}\n                />\n            </Card>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        descriptionHtml\n        id\n        variants(first:4){\n          edges{\n            node{\n              compareAtPrice\n              price\n              title\n            }\n          }\n        }\n        images(first: 10) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n      }\n    }\n  }\n`;"]},"metadata":{},"sourceType":"module"}