{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, Form, FormLayout, Frame, Layout, Page, Subheading, TextStyle, TextField } from '@shopify/polaris';\nimport store from 'store-js';\nimport axios from 'axios';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      businessName: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      state: '',\n      merchantDescription: '',\n      email: '{{Auto-Generated Link}}',\n      errorCheck: false,\n      primaryLoad: false,\n      secondaryLoad: false\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", product => {\n      this.setState({\n        errorCheck: true\n      });\n      let {\n        businessName,\n        streetAddress,\n        city,\n        zipCode,\n        state,\n        merchantDescription,\n        email\n      } = this.state;\n      businessName = businessName.trim();\n      streetAddress = streetAddress.trim();\n      merchantDescription = merchantDescription.trim();\n      city = city.trim();\n      state = state.trim();\n\n      if (businessName.length && streetAddress.length && city.length && state.length && merchantDescription.length && zipCode && email.length && email.includes(\"{{Auto-Generated Link}}\")) {\n        let updatedProduct = _objectSpread({\n          businessName,\n          streetAddress,\n          merchantDescription,\n          city,\n          state,\n          zipCode,\n          email\n        }, product);\n\n        this.setState({\n          primaryLoad: true\n        });\n        axios.put('/api/products', {\n          product: updatedProduct\n        }).then(res => {\n          console.log(store.get('products'));\n          store.get('products')[store.get('products').findIndex(prod => prod.id == store.get('product').id)] = store.get('product');\n          console.log(store.get('products')); //Notify of Successful Updated\n          //Get index of products in store that match updated Product & update list of products in store\n          //Redirect\n        }).catch(err => {\n          console.log(\"ERR FROM PUT\", err); //Notify of Error & redirect\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    let product = store.get('product');\n    this.setState({\n      businessName: product.businessName ? product.businessName : '',\n      streetAddress: product.streetAddress ? product.streetAddress : '',\n      city: product.city ? product.city : '',\n      zipCode: product.zipCode ? product.zipCode : '',\n      state: product.state ? product.state : '',\n      merchantDescription: product.merchantDescription ? product.merchantDescription : '',\n      email: product.email ? product.email : '{{Auto-Generated Link}}'\n    });\n  }\n\n  render() {\n    const app = this.context;\n    let {\n      errorCheck,\n      businessName,\n      streetAddress,\n      city,\n      zipCode,\n      state,\n      merchantDescription,\n      email,\n      primaryLoad,\n      secondaryLoad\n    } = this.state;\n    businessName = businessName.trim();\n    streetAddress = streetAddress.trim();\n    email = email.trim();\n    merchantDescription = merchantDescription.trim();\n    city = city.trim();\n    state = state.trim();\n    const product = store.get('product');\n\n    const redirectToHome = () => {\n      this.setState({\n        secondaryLoad: true\n      });\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/index');\n    };\n\n    return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true,\n      title: `Voucher Display Form: ${product ? product.title : ''}`,\n      secondaryFooterActions: [{\n        content: 'Return To List',\n        onAction: () => {\n          redirectToHome();\n        },\n        loading: secondaryLoad\n      }],\n      primaryFooterAction: {\n        content: 'Save',\n        onAction: () => {\n          this.handleSubmit(product);\n        },\n        loading: false\n      }\n    }, __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, \"Fill in the data below for the merchant corresponding to this product.\"), \" \", __jsx(\"br\", null), __jsx(\"br\", null), __jsx(FormLayout, null, __jsx(TextField, {\n      autoFocus: true,\n      prefix: \"\",\n      value: this.state.businessName,\n      onChange: this.handleChange('businessName'),\n      label: \"Merchant's Name \\u2013 As displayed in Google Maps\",\n      type: \"text\",\n      placeholder: \"Bob's Burger Shack\",\n      maxLength: 150,\n      error: errorCheck && !businessName.length ? \"Merchant's name is required.\" : null\n    }), __jsx(TextField, {\n      error: errorCheck && !merchantDescription.length ? \"Merchant description is required.\" : null,\n      prefix: \"\",\n      value: this.state.merchantDescription,\n      onChange: this.handleChange('merchantDescription'),\n      label: \"Merchant Description\",\n      type: \"text\",\n      maxLength: 800,\n      showCharacterCount: true,\n      spellCheck: true,\n      multiline: true,\n      placeholder: \"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\"\n    }), __jsx(TextField, {\n      error: errorCheck && !email.length ? \"Email to customer is required.\" : errorCheck && !email.includes(\"{{Auto-Generated Link}}\") ? \"Please include: {{Auto-Generated Link}}\" : null,\n      prefix: \"\",\n      value: this.state.email,\n      onChange: this.handleChange('email'),\n      label: \"Email\",\n      type: \"text\",\n      maxLength: 400,\n      showCharacterCount: true,\n      spellCheck: true,\n      multiline: true,\n      helpText: `Server code will look for \"{{Auto-Generated Link}}\" to replace with email. PLACE IT ANYWHERE, BUT DO NOT DELETE IT!`,\n      placeholder: \"Thank you for your purchase! Your link is: {{Auto-Generated Link}}. Enjoy!\"\n    }), __jsx(Subheading, null, \"Address\"), __jsx(FormLayout.Group, {\n      condensed: true\n    }, __jsx(TextField, {\n      error: errorCheck && !streetAddress.length ? \"Street address is required.\" : null,\n      maxLength: 75,\n      prefix: \"\",\n      value: this.state.streetAddress,\n      onChange: this.handleChange('streetAddress'),\n      label: \"Street Address\",\n      type: \"text\",\n      placeholder: \"48185 Washington Blvd.\"\n    }), __jsx(TextField, {\n      error: errorCheck && !city.length ? \"City name is required.\" : null,\n      maxLength: 50,\n      prefix: \"\",\n      value: this.state.city,\n      onChange: this.handleChange('city'),\n      label: \"City\",\n      type: \"text\",\n      label: \"City\",\n      placeholder: \"Seattle\"\n    }), __jsx(TextField, {\n      error: errorCheck && !zipCode ? \"Zip code is required.\" : null,\n      maxLength: 5,\n      prefix: \"\",\n      label: \"Zip Code\",\n      value: this.state.zipCode,\n      onChange: this.handleChange('zipCode'),\n      placeholder: \"90210\",\n      type: \"number\"\n    }), __jsx(TextField, {\n      error: errorCheck && !state.length ? \"State is required.\" : null,\n      maxLength: 2,\n      prefix: \"\",\n      label: \"State\",\n      value: this.state.state,\n      onChange: this.handleChange('state'),\n      placeholder: \"WA\"\n    })))))))));\n  }\n\n}\n\n_defineProperty(EditProduct, \"contextType\", Context);\n\nexport default EditProduct; // const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/pages/edit-products.js"],"names":["Card","Form","FormLayout","Frame","Layout","Page","Subheading","TextStyle","TextField","store","axios","Redirect","Context","EditProduct","React","Component","businessName","streetAddress","city","zipCode","state","merchantDescription","email","errorCheck","primaryLoad","secondaryLoad","field","value","setState","product","trim","length","includes","updatedProduct","put","then","res","console","log","get","findIndex","prod","id","catch","err","componentDidMount","render","app","context","redirectToHome","redirect","create","dispatch","Action","APP","title","content","onAction","loading","handleSubmit","handleChange"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,IAAhD,EAAsDC,UAAtD,EAAkEC,SAAlE,EAA6EC,SAA7E,QAA8F,kBAA9F;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;AAGA,MAAMC,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCAC/B;AACLC,MAAAA,YAAY,EAAE,EADT;AAELC,MAAAA,aAAa,EAAE,EAFV;AAGLC,MAAAA,IAAI,EAAE,EAHD;AAILC,MAAAA,OAAO,EAAE,EAJJ;AAKLC,MAAAA,KAAK,EAAE,EALF;AAMLC,MAAAA,mBAAmB,EAAE,EANhB;AAOLC,MAAAA,KAAK,EAAE,yBAPF;AAQLC,MAAAA,UAAU,EAAE,KARP;AASLC,MAAAA,WAAW,EAAE,KATR;AAULC,MAAAA,aAAa,EAAE;AAVV,KAD+B;;AAAA,0CAwFvBC,KAAD,IAAW;AACvB,aAAQC,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAE,SAACF,KAAD,GAASC;AAAX,OAAd,CAAlB;AACF,KA1FsC;;AAAA,0CA2FvBE,OAAD,IAAa;AACzB,WAAKD,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,UAAI;AAAEP,QAAAA,YAAF;AAAgBC,QAAAA,aAAhB;AAA+BC,QAAAA,IAA/B;AAAqCC,QAAAA,OAArC;AAA8CC,QAAAA,KAA9C;AAAqDC,QAAAA,mBAArD;AAA0EC,QAAAA;AAA1E,UAAoF,KAAKF,KAA7F;AACAJ,MAAAA,YAAY,GAAGA,YAAY,CAACc,IAAb,EAAf;AAAoCb,MAAAA,aAAa,GAAGA,aAAa,CAACa,IAAd,EAAhB;AACpCT,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACS,IAApB,EAAtB;AAAkDZ,MAAAA,IAAI,GAAGA,IAAI,CAACY,IAAL,EAAP;AAAoBV,MAAAA,KAAK,GAAGA,KAAK,CAACU,IAAN,EAAR;;AACtE,UAAId,YAAY,CAACe,MAAb,IAAuBd,aAAa,CAACc,MAArC,IAA+Cb,IAAI,CAACa,MAApD,IACDX,KAAK,CAACW,MADL,IACeV,mBAAmB,CAACU,MADnC,IAC6CZ,OAD7C,IAEDG,KAAK,CAACS,MAFL,IAEeT,KAAK,CAACU,QAAN,CAAe,yBAAf,CAFnB,EAE8D;AAC3D,YAAIC,cAAc;AAAKjB,UAAAA,YAAL;AAAmBC,UAAAA,aAAnB;AAAkCI,UAAAA,mBAAlC;AAAuDH,UAAAA,IAAvD;AAA6DE,UAAAA,KAA7D;AAAoED,UAAAA,OAApE;AAA6EG,UAAAA;AAA7E,WAAuFO,OAAvF,CAAlB;;AACA,aAAKD,QAAL,CAAc;AAAEJ,UAAAA,WAAW,EAAE;AAAf,SAAd;AACAd,QAAAA,KAAK,CAACwB,GAAN,CAAU,eAAV,EAA2B;AAAEL,UAAAA,OAAO,EAAEI;AAAX,SAA3B,EACIE,IADJ,CACSC,GAAG,IAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAK,CAAC8B,GAAN,CAAU,UAAV,CAAZ;AACA9B,UAAAA,KAAK,CAAC8B,GAAN,CAAU,UAAV,EAAsB9B,KAAK,CAAC8B,GAAN,CAAU,UAAV,EAAsBC,SAAtB,CAAiCC,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWjC,KAAK,CAAC8B,GAAN,CAAU,SAAV,EAAqBG,EAA1E,CAAtB,IAAuGjC,KAAK,CAAC8B,GAAN,CAAU,SAAV,CAAvG;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAK,CAAC8B,GAAN,CAAU,UAAV,CAAZ,EAHU,CAIV;AACA;AACA;AACF,SARJ,EAQMI,KARN,CAQYC,GAAG,IAAI;AACbP,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BM,GAA5B,EADa,CAEb;AACF,SAXJ;AAYF;AACH,KAlHsC;AAAA;;AAgBvCC,EAAAA,iBAAiB,GAAG;AACjB,QAAIhB,OAAO,GAAGpB,KAAK,CAAC8B,GAAN,CAAU,SAAV,CAAd;AACA,SAAKX,QAAL,CAAc;AACXZ,MAAAA,YAAY,EAAEa,OAAO,CAACb,YAAR,GAAuBa,OAAO,CAACb,YAA/B,GAA8C,EADjD;AAEXC,MAAAA,aAAa,EAAEY,OAAO,CAACZ,aAAR,GAAwBY,OAAO,CAACZ,aAAhC,GAAgD,EAFpD;AAGXC,MAAAA,IAAI,EAAEW,OAAO,CAACX,IAAR,GAAeW,OAAO,CAACX,IAAvB,GAA8B,EAHzB;AAIXC,MAAAA,OAAO,EAAEU,OAAO,CAACV,OAAR,GAAkBU,OAAO,CAACV,OAA1B,GAAoC,EAJlC;AAKXC,MAAAA,KAAK,EAAES,OAAO,CAACT,KAAR,GAAgBS,OAAO,CAACT,KAAxB,GAAgC,EAL5B;AAMXC,MAAAA,mBAAmB,EAAEQ,OAAO,CAACR,mBAAR,GAA8BQ,OAAO,CAACR,mBAAtC,GAA4D,EANtE;AAOXC,MAAAA,KAAK,EAAEO,OAAO,CAACP,KAAR,GAAgBO,OAAO,CAACP,KAAxB,GAAgC;AAP5B,KAAd;AASF;;AAEDwB,EAAAA,MAAM,GAAG;AACN,UAAMC,GAAG,GAAG,KAAKC,OAAjB;AACA,QAAI;AAAEzB,MAAAA,UAAF;AAAcP,MAAAA,YAAd;AAA4BC,MAAAA,aAA5B;AAA2CC,MAAAA,IAA3C;AAAiDC,MAAAA,OAAjD;AACDC,MAAAA,KADC;AACMC,MAAAA,mBADN;AAC2BC,MAAAA,KAD3B;AACkCE,MAAAA,WADlC;AAC+CC,MAAAA;AAD/C,QACiE,KAAKL,KAD1E;AAEAJ,IAAAA,YAAY,GAAGA,YAAY,CAACc,IAAb,EAAf;AAAoCb,IAAAA,aAAa,GAAGA,aAAa,CAACa,IAAd,EAAhB;AAAsCR,IAAAA,KAAK,GAAGA,KAAK,CAACQ,IAAN,EAAR;AAC1ET,IAAAA,mBAAmB,GAAGA,mBAAmB,CAACS,IAApB,EAAtB;AAAkDZ,IAAAA,IAAI,GAAGA,IAAI,CAACY,IAAL,EAAP;AAAoBV,IAAAA,KAAK,GAAGA,KAAK,CAACU,IAAN,EAAR;AACtE,UAAMD,OAAO,GAAGpB,KAAK,CAAC8B,GAAN,CAAU,SAAV,CAAhB;;AACA,UAAMU,cAAc,GAAG,MAAM;AAC1B,WAAKrB,QAAL,CAAc;AAAEH,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACA,YAAMyB,QAAQ,GAAGvC,QAAQ,CAACwC,MAAT,CAAgBJ,GAAhB,CAAjB;AACAG,MAAAA,QAAQ,CAACE,QAAT,CACGzC,QAAQ,CAAC0C,MAAT,CAAgBC,GADnB,EAEG,QAFH;AAIF,KAPD;;AAQA,WACG,MAAC,KAAD,QACG,MAAC,IAAD,QACG,MAAC,MAAD,QACG,MAAC,MAAD,CAAQ,OAAR,QACG,MAAC,IAAD,QACG,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAG,yBAAwBzB,OAAO,GAAGA,OAAO,CAAC0B,KAAX,GAAmB,EAAG,EAA7E;AACG,MAAA,sBAAsB,EAAE,CAAC;AAAEC,QAAAA,OAAO,EAAE,gBAAX;AAA6BC,QAAAA,QAAQ,EAAE,MAAM;AAAER,UAAAA,cAAc;AAAI,SAAjE;AAAmES,QAAAA,OAAO,EAAEjC;AAA5E,OAAD,CAD3B;AAEG,MAAA,mBAAmB,EAAE;AAAE+B,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,QAAQ,EAAE,MAAM;AAAE,eAAKE,YAAL,CAAkB9B,OAAlB;AAA4B,SAAjE;AAAmE6B,QAAAA,OAAO,EAAE;AAA5E;AAFxB,OAGG,MAAC,SAAD;AAAW,MAAA,SAAS,EAAC;AAArB,gFAHH,OAGqH,iBAHrH,EAG2H,iBAH3H,EAIG,MAAC,UAAD,QAEG,MAAC,SAAD;AAAW,MAAA,SAAS,EAAE,IAAtB;AAA4B,MAAA,MAAM,EAAC,EAAnC;AAAsC,MAAA,KAAK,EAAE,KAAKtC,KAAL,CAAWJ,YAAxD;AAAsE,MAAA,QAAQ,EAAE,KAAK4C,YAAL,CAAkB,cAAlB,CAAhF;AACG,MAAA,KAAK,EAAC,oDADT;AACyD,MAAA,IAAI,EAAC,MAD9D;AACqE,MAAA,WAAW,EAAC,oBADjF;AACsG,MAAA,SAAS,EAAE,GADjH;AAEG,MAAA,KAAK,EAAErC,UAAU,IAAI,CAACP,YAAY,CAACe,MAA5B,GAAqC,8BAArC,GAAsE;AAFhF,MAFH,EAKG,MAAC,SAAD;AAAW,MAAA,KAAK,EAAER,UAAU,IAAI,CAACF,mBAAmB,CAACU,MAAnC,GAA4C,mCAA5C,GAAkF,IAApG;AAA0G,MAAA,MAAM,EAAC,EAAjH;AAAoH,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,mBAAtI;AACG,MAAA,QAAQ,EAAE,KAAKuC,YAAL,CAAkB,qBAAlB,CADb;AACuD,MAAA,KAAK,EAAC,sBAD7D;AACoF,MAAA,IAAI,EAAC,MADzF;AACgG,MAAA,SAAS,EAAE,GAD3G;AAEG,MAAA,kBAAkB,EAAE,IAFvB;AAE6B,MAAA,UAAU,EAAE,IAFzC;AAE+C,MAAA,SAAS,EAAE,IAF1D;AAGG,MAAA,WAAW,EAAC;AAHf,MALH,EASG,MAAC,SAAD;AAAW,MAAA,KAAK,EAAErC,UAAU,IAAI,CAACD,KAAK,CAACS,MAArB,GAA8B,gCAA9B,GAAiER,UAAU,IAAI,CAACD,KAAK,CAACU,QAAN,CAAe,yBAAf,CAAf,GAA2D,yCAA3D,GAAuG,IAA1L;AAAgM,MAAA,MAAM,EAAC,EAAvM;AAA0M,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,KAA5N;AACG,MAAA,QAAQ,EAAE,KAAKsC,YAAL,CAAkB,OAAlB,CADb;AACyC,MAAA,KAAK,EAAC,OAD/C;AACuD,MAAA,IAAI,EAAC,MAD5D;AACmE,MAAA,SAAS,EAAE,GAD9E;AAEG,MAAA,kBAAkB,EAAE,IAFvB;AAE6B,MAAA,UAAU,EAAE,IAFzC;AAE+C,MAAA,SAAS,EAAE,IAF1D;AAEgE,MAAA,QAAQ,EAAG,qHAF3E;AAGG,MAAA,WAAW,EAAC;AAHf,MATH,EAaG,MAAC,UAAD,kBAbH,EAcG,MAAC,UAAD,CAAY,KAAZ;AAAkB,MAAA,SAAS;AAA3B,OACG,MAAC,SAAD;AAAW,MAAA,KAAK,EAAErC,UAAU,IAAI,CAACN,aAAa,CAACc,MAA7B,GAAsC,6BAAtC,GAAsE,IAAxF;AAA8F,MAAA,SAAS,EAAE,EAAzG;AAA6G,MAAA,MAAM,EAAC,EAApH;AAAuH,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWH,aAAzI;AAAwJ,MAAA,QAAQ,EAAE,KAAK2C,YAAL,CAAkB,eAAlB,CAAlK;AACG,MAAA,KAAK,EAAC,gBADT;AAC0B,MAAA,IAAI,EAAC,MAD/B;AACsC,MAAA,WAAW,EAAC;AADlD,MADH,EAGG,MAAC,SAAD;AAAW,MAAA,KAAK,EAAErC,UAAU,IAAI,CAACL,IAAI,CAACa,MAApB,GAA6B,wBAA7B,GAAwD,IAA1E;AAAgF,MAAA,SAAS,EAAE,EAA3F;AAA+F,MAAA,MAAM,EAAC,EAAtG;AAAyG,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWF,IAA3H;AAAiI,MAAA,QAAQ,EAAE,KAAK0C,YAAL,CAAkB,MAAlB,CAA3I;AACG,MAAA,KAAK,EAAC,MADT;AACgB,MAAA,IAAI,EAAC,MADrB;AAC4B,MAAA,KAAK,EAAC,MADlC;AACyC,MAAA,WAAW,EAAC;AADrD,MAHH,EAKG,MAAC,SAAD;AAAW,MAAA,KAAK,EAAErC,UAAU,IAAI,CAACJ,OAAf,GAAyB,uBAAzB,GAAmD,IAArE;AAA2E,MAAA,SAAS,EAAE,CAAtF;AAAyF,MAAA,MAAM,EAAC,EAAhG;AAAmG,MAAA,KAAK,EAAC,UAAzG;AAAoH,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,OAAtI;AAA+I,MAAA,QAAQ,EAAE,KAAKyC,YAAL,CAAkB,SAAlB,CAAzJ;AACG,MAAA,WAAW,EAAC,OADf;AACuB,MAAA,IAAI,EAAC;AAD5B,MALH,EAOG,MAAC,SAAD;AAAW,MAAA,KAAK,EAAErC,UAAU,IAAI,CAACH,KAAK,CAACW,MAArB,GAA8B,oBAA9B,GAAqD,IAAvE;AAA6E,MAAA,SAAS,EAAE,CAAxF;AAA2F,MAAA,MAAM,EAAC,EAAlG;AAAqG,MAAA,KAAK,EAAC,OAA3G;AAAmH,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWA,KAArI;AAA4I,MAAA,QAAQ,EAAE,KAAKwC,YAAL,CAAkB,OAAlB,CAAtJ;AACG,MAAA,WAAW,EAAC;AADf,MAPH,CAdH,CAJH,CADH,CADH,CADH,CADH,CADH,CADH;AA0CF;;AAtFsC;;gBAApC/C,W,iBAckBD,O;;AAuGxB,eAAeC,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Card, Form, FormLayout, Frame, Layout, Page, Subheading, TextStyle, TextField } from '@shopify/polaris';\nimport store from 'store-js';\nimport axios from 'axios';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\n\nclass EditProduct extends React.Component {\n   state = {\n      businessName: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      state: '',\n      merchantDescription: '',\n      email: '{{Auto-Generated Link}}',\n      errorCheck: false,\n      primaryLoad: false,\n      secondaryLoad: false\n   };\n\n   static contextType = Context;\n\n   componentDidMount() {\n      let product = store.get('product')\n      this.setState({\n         businessName: product.businessName ? product.businessName : '',\n         streetAddress: product.streetAddress ? product.streetAddress : '',\n         city: product.city ? product.city : '',\n         zipCode: product.zipCode ? product.zipCode : '',\n         state: product.state ? product.state : '',\n         merchantDescription: product.merchantDescription ? product.merchantDescription : '',\n         email: product.email ? product.email : '{{Auto-Generated Link}}'\n      })\n   }\n\n   render() {\n      const app = this.context;\n      let { errorCheck, businessName, streetAddress, city, zipCode,\n         state, merchantDescription, email, primaryLoad, secondaryLoad } = this.state;\n      businessName = businessName.trim(); streetAddress = streetAddress.trim(); email = email.trim();\n      merchantDescription = merchantDescription.trim(); city = city.trim(); state = state.trim();\n      const product = store.get('product');\n      const redirectToHome = () => {\n         this.setState({ secondaryLoad: true })\n         const redirect = Redirect.create(app);\n         redirect.dispatch(\n            Redirect.Action.APP,\n            '/index',\n         )\n      }\n      return (\n         <Frame>\n            <Page>\n               <Layout>\n                  <Layout.Section>\n                     <Form>\n                        <Card sectioned title={`Voucher Display Form: ${product ? product.title : ''}`}\n                           secondaryFooterActions={[{ content: 'Return To List', onAction: () => { redirectToHome() }, loading: secondaryLoad }]}\n                           primaryFooterAction={{ content: 'Save', onAction: () => { this.handleSubmit(product) }, loading: false }} >\n                           <TextStyle variation=\"subdued\">Fill in the data below for the merchant corresponding to this product.</TextStyle> <br /><br />\n                           <FormLayout>\n                              {/* <Subheading>About</Subheading> */}\n                              <TextField autoFocus={true} prefix=\"\" value={this.state.businessName} onChange={this.handleChange('businessName')}\n                                 label=\"Merchant's Name – As displayed in Google Maps\" type=\"text\" placeholder=\"Bob's Burger Shack\" maxLength={150}\n                                 error={errorCheck && !businessName.length ? \"Merchant's name is required.\" : null} />\n                              <TextField error={errorCheck && !merchantDescription.length ? \"Merchant description is required.\" : null} prefix=\"\" value={this.state.merchantDescription}\n                                 onChange={this.handleChange('merchantDescription')} label=\"Merchant Description\" type=\"text\" maxLength={800}\n                                 showCharacterCount={true} spellCheck={true} multiline={true}\n                                 placeholder=\"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\" />\n                              <TextField error={errorCheck && !email.length ? \"Email to customer is required.\" : errorCheck && !email.includes(\"{{Auto-Generated Link}}\") ? \"Please include: {{Auto-Generated Link}}\" : null} prefix=\"\" value={this.state.email}\n                                 onChange={this.handleChange('email')} label=\"Email\" type=\"text\" maxLength={400}\n                                 showCharacterCount={true} spellCheck={true} multiline={true} helpText={`Server code will look for \"{{Auto-Generated Link}}\" to replace with email. PLACE IT ANYWHERE, BUT DO NOT DELETE IT!`}\n                                 placeholder=\"Thank you for your purchase! Your link is: {{Auto-Generated Link}}. Enjoy!\" />\n                              <Subheading>Address</Subheading>\n                              <FormLayout.Group condensed>\n                                 <TextField error={errorCheck && !streetAddress.length ? \"Street address is required.\" : null} maxLength={75} prefix=\"\" value={this.state.streetAddress} onChange={this.handleChange('streetAddress')}\n                                    label=\"Street Address\" type=\"text\" placeholder=\"48185 Washington Blvd.\" />\n                                 <TextField error={errorCheck && !city.length ? \"City name is required.\" : null} maxLength={50} prefix=\"\" value={this.state.city} onChange={this.handleChange('city')}\n                                    label=\"City\" type=\"text\" label=\"City\" placeholder=\"Seattle\" />\n                                 <TextField error={errorCheck && !zipCode ? \"Zip code is required.\" : null} maxLength={5} prefix=\"\" label=\"Zip Code\" value={this.state.zipCode} onChange={this.handleChange('zipCode')}\n                                    placeholder=\"90210\" type=\"number\" />\n                                 <TextField error={errorCheck && !state.length ? \"State is required.\" : null} maxLength={2} prefix=\"\" label=\"State\" value={this.state.state} onChange={this.handleChange('state')}\n                                    placeholder=\"WA\" />\n                              </FormLayout.Group>\n                           </FormLayout>\n                        </Card>\n                     </Form>\n                  </Layout.Section>\n               </Layout>\n            </Page>\n         </Frame>\n      );\n   }\n\n   handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n   }\n   handleSubmit = (product) => {\n      this.setState({ errorCheck: true });\n      let { businessName, streetAddress, city, zipCode, state, merchantDescription, email } = this.state;\n      businessName = businessName.trim(); streetAddress = streetAddress.trim();\n      merchantDescription = merchantDescription.trim(); city = city.trim(); state = state.trim();\n      if (businessName.length && streetAddress.length && city.length &&\n         state.length && merchantDescription.length && zipCode &&\n         email.length && email.includes(\"{{Auto-Generated Link}}\")) {\n         let updatedProduct = { businessName, streetAddress, merchantDescription, city, state, zipCode, email, ...product }\n         this.setState({ primaryLoad: true });\n         axios.put('/api/products', { product: updatedProduct })\n            .then(res => {\n               console.log(store.get('products'))\n               store.get('products')[store.get('products').findIndex((prod) => prod.id == store.get('product').id)] = store.get('product');\n               console.log(store.get('products'))\n               //Notify of Successful Updated\n               //Get index of products in store that match updated Product & update list of products in store\n               //Redirect\n            }).catch(err => {\n               console.log(\"ERR FROM PUT\", err)\n               //Notify of Error & redirect\n            })\n      }\n   }\n}\n\nexport default EditProduct;\n\n// const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;\n"]},"metadata":{},"sourceType":"module"}