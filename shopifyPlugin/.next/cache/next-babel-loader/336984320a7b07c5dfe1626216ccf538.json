{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      }; // const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n      // return (<div><TextStyle>INSIDE RESOUCE LST</TextStyle></div>)\n\n\n      return __jsx(Card, null, __jsx(ResourceList, {\n        showHeader: true,\n        resourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: store.get('products'),\n        renderItem: function renderItem(item) {\n          console.log(item.title, item);\n          var complete = item.streetAddress && item.city && item.email && item.zipCode && item.state && item.businessName && item.merchantDescription;\n          console.log(complete);\n\n          var media = __jsx(Thumbnail, {\n            source: item.images[0] ? item.images[0].originalSrc : '',\n            alt: item.images[0] ? item.images[0].altText : ''\n          });\n\n          return __jsx(ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: \"View details for \".concat(item.title),\n            onClick: function onClick() {\n              store.set('product', item);\n              redirectToProduct();\n            }\n          }, __jsx(Stack, null, __jsx(Stack.Item, {\n            fill: true\n          }, __jsx(\"h3\", null, \" \", __jsx(TextStyle, {\n            variation: \"strong\"\n          }, \" \", item.title, \" \"), \" \")), __jsx(Stack.Item, null, \" \", __jsx(TextStyle, {\n            variation: complete ? \"positive\" : \"negative\"\n          }, complete ? \"Complete\" : \"Incomplete\", \" \"), \" \")));\n        }\n      }));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/components/ResourceList.js"],"names":["Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","ResourceListWithProducts","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","singular","plural","get","item","console","log","title","complete","streetAddress","city","email","zipCode","state","businessName","merchantDescription","media","images","originalSrc","altText","id","set","React","Component"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;IAEMC,wB;;;;;;;;;;;;;6BAIO;AACL,UAAMC,GAAG,GAAG,KAAKC,OAAjB;;AACA,UAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,YAAMC,QAAQ,GAAGN,QAAQ,CAACO,MAAT,CAAgBJ,GAAhB,CAAjB;AACAG,QAAAA,QAAQ,CAACE,QAAT,CACIR,QAAQ,CAACS,MAAT,CAAgBC,GADpB,EAEI,gBAFJ;AAIH,OAND,CAFK,CASL;AACA;;;AACA,aACI,MAAC,IAAD,QACI,MAAC,YAAD;AACI,QAAA,UAAU,MADd;AAEI,QAAA,YAAY,EAAE;AAAEC,UAAAA,QAAQ,EAAE,SAAZ;AAAuBC,UAAAA,MAAM,EAAE;AAA/B,SAFlB;AAGI,QAAA,KAAK,EAAEb,KAAK,CAACc,GAAN,CAAU,UAAV,CAHX;AAII,QAAA,UAAU,EAAE,oBAACC,IAAD,EAAU;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB,EAAwBH,IAAxB;AACA,cAAII,QAAQ,GAAIJ,IAAI,CAACK,aAAL,IAAsBL,IAAI,CAACM,IAA3B,IAAmCN,IAAI,CAACO,KAAxC,IACTP,IAAI,CAACQ,OADI,IACOR,IAAI,CAACS,KADZ,IACqBT,IAAI,CAACU,YAD1B,IAC0CV,IAAI,CAACW,mBAD/D;AAEAV,UAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,cAAMQ,KAAK,GACP,MAAC,SAAD;AACI,YAAA,MAAM,EAAEZ,IAAI,CAACa,MAAL,CAAY,CAAZ,IAAiBb,IAAI,CAACa,MAAL,CAAY,CAAZ,EAAeC,WAAhC,GAA8C,EAD1D;AAEI,YAAA,GAAG,EAAEd,IAAI,CAACa,MAAL,CAAY,CAAZ,IAAiBb,IAAI,CAACa,MAAL,CAAY,CAAZ,EAAeE,OAAhC,GAA0C;AAFnD,YADJ;;AAKA,iBACI,MAAC,YAAD,CAAc,IAAd;AAAmB,YAAA,EAAE,EAAEf,IAAI,CAACgB,EAA5B;AAAgC,YAAA,KAAK,EAAEJ,KAAvC;AACI,YAAA,kBAAkB,6BAAsBZ,IAAI,CAACG,KAA3B,CADtB;AAEI,YAAA,OAAO,EAAE,mBAAM;AACXlB,cAAAA,KAAK,CAACgC,GAAN,CAAU,SAAV,EAAqBjB,IAArB;AACAT,cAAAA,iBAAiB;AACpB;AALL,aAMI,MAAC,KAAD,QACI,MAAC,KAAD,CAAO,IAAP;AAAY,YAAA,IAAI;AAAhB,aACI,uBAAK,MAAC,SAAD;AAAW,YAAA,SAAS,EAAC;AAArB,kBAAgCS,IAAI,CAACG,KAArC,MAAL,MADJ,CADJ,EAII,MAAC,KAAD,CAAO,IAAP,aAAa,MAAC,SAAD;AAAW,YAAA,SAAS,EAAEC,QAAQ,GAAG,UAAH,GAAgB;AAA9C,aAA2DA,QAAQ,GAAG,UAAH,GAAgB,YAAnF,MAAb,MAJJ,CANJ,CADJ;AAeH;AA7BL,QADJ,CADJ;AAmCH;;;;EAlDkCc,KAAK,CAACC,S;;gBAAvC/B,wB,iBAEmBD,O;;AAmDzB,eAAeC,wBAAf","sourcesContent":["import { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nclass ResourceListWithProducts extends React.Component {\n\n    static contextType = Context;\n\n    render() {\n        const app = this.context;\n        const redirectToProduct = () => {\n            const redirect = Redirect.create(app);\n            redirect.dispatch(\n                Redirect.Action.APP,\n                '/edit-products',\n            )\n        }\n        // const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n        // return (<div><TextStyle>INSIDE RESOUCE LST</TextStyle></div>)\n        return (\n            <Card>\n                <ResourceList\n                    showHeader\n                    resourceName={{ singular: 'Product', plural: 'Products' }}\n                    items={store.get('products')}\n                    renderItem={(item) => {\n                        console.log(item.title, item)\n                        let complete = (item.streetAddress && item.city && item.email\n                            && item.zipCode && item.state && item.businessName && item.merchantDescription);\n                        console.log(complete)\n                        const media = (\n                            <Thumbnail\n                                source={item.images[0] ? item.images[0].originalSrc : ''}\n                                alt={item.images[0] ? item.images[0].altText : ''} />\n                        );\n                        return (\n                            <ResourceList.Item id={item.id} media={media}\n                                accessibilityLabel={`View details for ${item.title}`}\n                                onClick={() => {\n                                    store.set('product', item);\n                                    redirectToProduct();\n                                }} >\n                                <Stack>\n                                    <Stack.Item fill>\n                                        <h3> <TextStyle variation=\"strong\"> {item.title} </TextStyle> </h3>\n                                    </Stack.Item>\n                                    <Stack.Item> <TextStyle variation={complete ? \"positive\" : \"negative\"}>{complete ? \"Complete\" : \"Incomplete\"} </TextStyle> </Stack.Item>\n                                </Stack>\n                            </ResourceList.Item>\n                        );\n                    }}\n                />\n            </Card>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}