{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Banner, Card, DisplayText, Subheading, Form, FormLayout, Frame, Layout, TextStyle, Page, PageActions, TextField, Heading, Button } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { Mutation } from 'react-apollo';\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      businessName: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      state: '',\n      merchantDescription: '',\n      errorCheck: false\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", item => {\n      this.setState({\n        errorCheck: true\n      });\n      console.log(\"**\", item); // let updatedItem = {...item, ...this.state};\n      // console.log(\"^^\",updatedItem)\n    });\n  }\n\n  render() {\n    const app = this.context;\n    const item = store.get('product');\n\n    const redirectToHome = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/index');\n    };\n\n    return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"large\"\n    }, item ? item.title : \"LOADING\"), __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(Heading, null, \"Voucher Display Form: \", item ? item.title : ''), __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, \"Fill in the data below for the merchant corresponding to this product.\"), \" \", __jsx(\"br\", null), __jsx(\"br\", null), __jsx(FormLayout, null, __jsx(Subheading, null, \"About\"), __jsx(TextField, {\n      autoFocus: true,\n      prefix: \"\",\n      value: this.state.businessName,\n      onChange: this.handleChange('businessName'),\n      label: \"Merchant's Name \\u2013 As displayed in Google Maps\",\n      type: \"text\",\n      placeholder: \"Bob's Burger Shack\",\n      maxLength: 150,\n      error: errorCheck ? \"Merchant's name is required.\" : null\n    }), __jsx(TextField, {\n      error: errorCheck ? \"Merchant description is required.\" : null,\n      prefix: \"\",\n      value: this.state.merchantDescription,\n      onChange: this.handleChange('merchantDescription'),\n      label: \"Merchant Description\",\n      type: \"text\",\n      maxLength: 800,\n      showCharacterCount: true,\n      spellCheck: true,\n      multiline: true,\n      placeholder: \"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\"\n    }), __jsx(Subheading, null, \"Address\"), __jsx(FormLayout.Group, {\n      condensed: true\n    }, __jsx(TextField, {\n      error: errorCheck ? \"Street address is required.\" : null,\n      maxLength: 75,\n      prefix: \"\",\n      value: this.state.streetAddress,\n      onChange: this.handleChange('streetAddress'),\n      label: \"Street Address\",\n      type: \"text\",\n      placeholder: \"48185 Washington Blvd.\"\n    }), __jsx(TextField, {\n      error: errorCheck ? \"City name is required.\" : null,\n      maxLength: 50,\n      prefix: \"\",\n      value: this.state.city,\n      onChange: this.handleChange('city'),\n      label: \"City\",\n      type: \"text\",\n      label: \"City\",\n      placeholder: \"Seattle\"\n    }), __jsx(TextField, {\n      error: errorCheck ? \"Zip code is required.\" : null,\n      maxLength: 5,\n      prefix: \"\",\n      label: \"Zip Code\",\n      value: this.state.zipCode,\n      onChange: this.handleChange('zipCode'),\n      placeholder: \"90210\",\n      type: \"number\"\n    }), __jsx(TextField, {\n      error: errorCheck ? \"State is required.\" : null,\n      maxLength: 2,\n      prefix: \"\",\n      label: \"State\",\n      value: this.state.state,\n      onChange: this.handleChange('state'),\n      placeholder: \"WA\"\n    })))), __jsx(Button, {\n      submit: true\n    }, \"Save\"), __jsx(PageActions, {\n      primaryAction: [{\n        content: 'Save',\n        onAction: () => {\n          this.handleSubmit(item);\n        }\n      }],\n      secondaryActions: [{\n        content: 'Return To List',\n        onAction: () => {\n          redirectToHome();\n        }\n      }]\n    }))))));\n  }\n\n}\n\n_defineProperty(EditProduct, \"contextType\", Context);\n\nexport default EditProduct; // const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Subheading","Form","FormLayout","Frame","Layout","TextStyle","Page","PageActions","TextField","Heading","Button","store","gql","Redirect","Context","Mutation","EditProduct","React","Component","businessName","streetAddress","city","zipCode","state","merchantDescription","errorCheck","field","value","setState","item","console","log","render","app","context","get","redirectToHome","redirect","create","dispatch","Action","APP","title","handleSubmit","handleChange","content","onAction"],"mappings":"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","sourcesContent":["import {\n   Banner, Card, DisplayText, Subheading,\n   Form, FormLayout, Frame, Layout, TextStyle,\n   Page, PageActions, TextField, Heading, Button\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { Mutation } from 'react-apollo';\n\n\nclass EditProduct extends React.Component {\n   state = {\n      businessName: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      state: '',\n      merchantDescription: '',\n      errorCheck: false,\n   };\n\n   static contextType = Context;\n\n   render() {\n      const app = this.context;\n      const item = store.get('product');\n      const redirectToHome = () => {\n         const redirect = Redirect.create(app);\n         redirect.dispatch(\n            Redirect.Action.APP,\n            '/index',\n         )\n      }\n      return (\n         <Frame>\n            <Page>\n               <Layout>\n                  <Layout.Section>\n                     <DisplayText size=\"large\">{item ? item.title : \"LOADING\"}</DisplayText>\n                     <Form onSubmit={this.handleSubmit}>\n                        <Card sectioned>\n                           <Heading>Voucher Display Form: {item ? item.title : ''}</Heading>\n                           <TextStyle variation=\"subdued\">Fill in the data below for the merchant corresponding to this product.</TextStyle> <br /><br />\n                           <FormLayout>\n                              <Subheading>About</Subheading>\n                              <TextField autoFocus={true} prefix=\"\" value={this.state.businessName} onChange={this.handleChange('businessName')}\n                                 label=\"Merchant's Name – As displayed in Google Maps\" type=\"text\" placeholder=\"Bob's Burger Shack\" maxLength={150}\n                                 error={errorCheck ? \"Merchant's name is required.\" : null} />\n                              <TextField error={errorCheck ? \"Merchant description is required.\" : null} prefix=\"\" value={this.state.merchantDescription} \n                              onChange={this.handleChange('merchantDescription')} label=\"Merchant Description\" type=\"text\" maxLength={800} \n                                 showCharacterCount={true} spellCheck={true} multiline={true}\n                                 placeholder=\"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\" />\n                              <Subheading>Address</Subheading>\n                              <FormLayout.Group condensed>\n                                 <TextField error={errorCheck ? \"Street address is required.\" : null} maxLength={75} prefix=\"\" value={this.state.streetAddress} onChange={this.handleChange('streetAddress')}\n                                    label=\"Street Address\" type=\"text\" placeholder=\"48185 Washington Blvd.\" />\n                                 <TextField error={errorCheck ? \"City name is required.\" : null} maxLength={50} prefix=\"\" value={this.state.city} onChange={this.handleChange('city')}\n                                    label=\"City\" type=\"text\" label=\"City\" placeholder=\"Seattle\" />\n                                 <TextField error={errorCheck ? \"Zip code is required.\" : null} maxLength={5} prefix=\"\" label=\"Zip Code\" value={this.state.zipCode} onChange={this.handleChange('zipCode')}\n                                    placeholder=\"90210\" type=\"number\" />\n                                 <TextField error={errorCheck ? \"State is required.\" : null} maxLength={2} prefix=\"\" label=\"State\" value={this.state.state} onChange={this.handleChange('state')}\n                                    placeholder=\"WA\" />\n                              </FormLayout.Group>\n                           </FormLayout>\n                        </Card>\n                        <Button submit>Save</Button>\n                        <PageActions\n                           primaryAction={[{\n                              content: 'Save', onAction: () => {\n                                 this.handleSubmit(item);\n                              }\n                           }]}\n                           secondaryActions={[{\n                              content: 'Return To List',\n                              onAction: () => {\n                                 redirectToHome();\n                              }\n                           }]} />\n                     </Form>\n                  </Layout.Section>\n               </Layout>\n            </Page>\n         </Frame>\n      );\n   }\n\n   handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n   }\n   handleSubmit = (item) => {\n      this.setState({ errorCheck: true });\n      console.log(\"**\", item)\n      // let updatedItem = {...item, ...this.state};\n      // console.log(\"^^\",updatedItem)\n   }\n}\n\nexport default EditProduct;\n\n// const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;\n"]},"metadata":{},"sourceType":"module"}