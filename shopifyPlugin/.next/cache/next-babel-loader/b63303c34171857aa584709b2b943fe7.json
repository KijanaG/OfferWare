{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    return __jsx(Card, null, __jsx(ResourceList, {\n      showHeader: true,\n      resourceName: {\n        singular: 'Product',\n        plural: 'Products'\n      },\n      items: this.props.products,\n      renderItem: item => {\n        let complete = false;\n\n        if (item.streetAddress && item.city && item.email && item.zipCode && item.state && item.businessName && item.merchantDescription) {\n          complete = true;\n        }\n\n        const media = __jsx(Thumbnail, {\n          source: item.images[0] ? item.images[0].originalSrc : '',\n          alt: item.images[0] ? item.images[0].altText : ''\n        });\n\n        return __jsx(ResourceList.Item, {\n          id: item.id,\n          media: media,\n          accessibilityLabel: `View details for ${item.title}`,\n          onClick: () => {\n            store.set('product', item);\n            redirectToProduct();\n          }\n        }, __jsx(Stack, null, __jsx(Stack.Item, {\n          fill: true\n        }, __jsx(\"h3\", null, \" \", __jsx(TextStyle, {\n          variation: \"strong\"\n        }, \" \", ite.title, \" \"), \" \")), __jsx(Stack.Item, null, \" \", __jsx(TextStyle, {\n          variation: complete ? \"positive\" : \"negative\"\n        }, complete ? \"Complete\" : \"Incomplete\", \" \"), \" \")));\n      }\n    }));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/components/ResourceList.js"],"names":["Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","ResourceListWithProducts","React","Component","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","singular","plural","props","products","item","complete","streetAddress","city","email","zipCode","state","businessName","merchantDescription","media","images","originalSrc","altText","id","title","set","ite"],"mappings":";;;;;AAAA,SAASA,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;AAEA,MAAMC,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AAInDC,EAAAA,MAAM,GAAG;AACL,UAAMC,GAAG,GAAG,KAAKC,OAAjB;;AACA,UAAMC,iBAAiB,GAAG,MAAM;AAC5B,YAAMC,QAAQ,GAAGT,QAAQ,CAACU,MAAT,CAAgBJ,GAAhB,CAAjB;AACAG,MAAAA,QAAQ,CAACE,QAAT,CACIX,QAAQ,CAACY,MAAT,CAAgBC,GADpB,EAEI,gBAFJ;AAIH,KAND;;AAQA,WACI,MAAC,IAAD,QACI,MAAC,YAAD;AAAc,MAAA,UAAU,MAAxB;AAAyB,MAAA,YAAY,EAAE;AAAEC,QAAAA,QAAQ,EAAE,SAAZ;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAvC;AACI,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,QADtB;AAEI,MAAA,UAAU,EAAGC,IAAD,IAAU;AAClB,YAAIC,QAAQ,GAAG,KAAf;;AACA,YAAID,IAAI,CAACE,aAAL,IAAsBF,IAAI,CAACG,IAA3B,IAAmCH,IAAI,CAACI,KAAxC,IAAiDJ,IAAI,CAACK,OAAtD,IACGL,IAAI,CAACM,KADR,IACiBN,IAAI,CAACO,YADtB,IACsCP,IAAI,CAACQ,mBAD/C,EACoE;AAChEP,UAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,cAAMQ,KAAK,GACP,MAAC,SAAD;AACI,UAAA,MAAM,EAAET,IAAI,CAACU,MAAL,CAAY,CAAZ,IAAiBV,IAAI,CAACU,MAAL,CAAY,CAAZ,EAAeC,WAAhC,GAA8C,EAD1D;AAEI,UAAA,GAAG,EAAEX,IAAI,CAACU,MAAL,CAAY,CAAZ,IAAiBV,IAAI,CAACU,MAAL,CAAY,CAAZ,EAAeE,OAAhC,GAA0C;AAFnD,UADJ;;AAKA,eACI,MAAC,YAAD,CAAc,IAAd;AAAmB,UAAA,EAAE,EAAEZ,IAAI,CAACa,EAA5B;AAAgC,UAAA,KAAK,EAAEJ,KAAvC;AACI,UAAA,kBAAkB,EAAG,oBAAmBT,IAAI,CAACc,KAAM,EADvD;AAEI,UAAA,OAAO,EAAE,MAAM;AACXjC,YAAAA,KAAK,CAACkC,GAAN,CAAU,SAAV,EAAqBf,IAArB;AACAV,YAAAA,iBAAiB;AACpB;AALL,WAMI,MAAC,KAAD,QACI,MAAC,KAAD,CAAO,IAAP;AAAY,UAAA,IAAI;AAAhB,WACI,uBAAK,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,gBAAgC0B,GAAG,CAACF,KAApC,MAAL,MADJ,CADJ,EAII,MAAC,KAAD,CAAO,IAAP,aAAa,MAAC,SAAD;AAAW,UAAA,SAAS,EAAEb,QAAQ,GAAG,UAAH,GAAgB;AAA9C,WAA2DA,QAAQ,GAAG,UAAH,GAAgB,YAAnF,MAAb,MAJJ,CANJ,CADJ;AAeH;AA5BL,MADJ,CADJ;AAkCH;;AAhDkD;;gBAAjDjB,wB,iBAEmBD,O;;AAiDzB,eAAeC,wBAAf","sourcesContent":["import { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nclass ResourceListWithProducts extends React.Component {\n\n    static contextType = Context;\n\n    render() {\n        const app = this.context;\n        const redirectToProduct = () => {\n            const redirect = Redirect.create(app);\n            redirect.dispatch(\n                Redirect.Action.APP,\n                '/edit-products',\n            )\n        }\n\n        return (\n            <Card>\n                <ResourceList showHeader resourceName={{ singular: 'Product', plural: 'Products' }}\n                    items={this.props.products}\n                    renderItem={(item) => {\n                        let complete = false;\n                        if (item.streetAddress && item.city && item.email && item.zipCode\n                            && item.state && item.businessName && item.merchantDescription) {\n                            complete = true\n                        }\n                        const media = (\n                            <Thumbnail\n                                source={item.images[0] ? item.images[0].originalSrc : ''}\n                                alt={item.images[0] ? item.images[0].altText : ''} />\n                        );\n                        return (\n                            <ResourceList.Item id={item.id} media={media}\n                                accessibilityLabel={`View details for ${item.title}`}\n                                onClick={() => {\n                                    store.set('product', item);\n                                    redirectToProduct();\n                                }} >\n                                <Stack>\n                                    <Stack.Item fill>\n                                        <h3> <TextStyle variation=\"strong\"> {ite.title} </TextStyle> </h3>\n                                    </Stack.Item>\n                                    <Stack.Item> <TextStyle variation={complete ? \"positive\" : \"negative\"}>{complete ? \"Complete\" : \"Incomplete\"} </TextStyle> </Stack.Item>\n                                </Stack>\n                            </ResourceList.Item>\n                        );\n                    }}\n                />\n            </Card>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}