{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidCatch\", (error, errorInfo) => catchFunc(error, errorInfo, this));\n\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return handleError(this);\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\nexport const withErrorBoundary = WrappedComponent => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"componentDidCatch\", (error, errorInfo) => catchFunc(error, errorInfo, this));\n\n      this.state = {\n        error: null,\n        errorInfo: null\n      };\n    }\n\n    render() {\n      if (this.state.errorInfo) {\n        return handleError(this);\n      } // Normally, just render children\n\n\n      return __jsx(WrappedComponent, this.props);\n    }\n\n  }, _temp;\n};\n\nconst catchFunc = (error, errorInfo, ctx) => {\n  // catch errors in any components below and re-render with error message\n  ctx.setState({\n    error: error,\n    errorInfo: errorInfo\n  }); // log error messages, etc.\n};\n\nconst handleError = ctx => // Error path\n__jsx(\"div\", {\n  style: ctx.props.style || styles.error\n}, __jsx(\"h2\", null, \"Something went wrong.\"), __jsx(\"details\", {\n  style: {\n    whiteSpace: 'pre-wrap'\n  }\n}, ctx.state.error && ctx.state.error.toString(), __jsx(\"br\", null), ctx.state.errorInfo.componentStack));\n\nconst styles = {\n  error: {\n    backgroundColor: '#f98e7e',\n    borderTop: '1px solid #777',\n    borderBottom: '1px solid #777',\n    padding: '12px'\n  }\n};","map":null,"metadata":{},"sourceType":"module"}