{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Banner, Card, DisplayText, Subheading, Form, FormLayout, Frame, Layout, TextStyle, Page, PageActions, TextField, Heading, Button } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { Mutation } from 'react-apollo';\n\nvar EditProduct = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  var _super = _createSuper(EditProduct);\n\n  function EditProduct() {\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      businessName: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      state: '',\n      merchantDescription: '',\n      email: '{{Auto-Generated Link}}',\n      errorCheck: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (item) {\n      _this.setState({\n        errorCheck: true\n      });\n\n      var _this$state = _this.state,\n          businessName = _this$state.businessName,\n          streetAddress = _this$state.streetAddress,\n          city = _this$state.city,\n          zipCode = _this$state.zipCode,\n          state = _this$state.state,\n          merchantDescription = _this$state.merchantDescription;\n      businessName = businessName.trim();\n      streetAddress = streetAddress.trim();\n      merchantDescription = merchantDescription.trim();\n      city = city.trim();\n      state = state.trim();\n\n      if (businessName.length && streetAddress.length && city.length && state.length && merchantDescription.length && zipCode) {\n        var newItems = _objectSpread({\n          businessName: businessName,\n          streetAddress: streetAddress,\n          merchantDescription: merchantDescription,\n          city: city,\n          state: state,\n          zipCode: zipCode\n        }, item); //Set Loading\n        //Post to Database\n\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"render\",\n    value: function render() {\n      var _jsx,\n          _this2 = this;\n\n      var app = this.context;\n      var _this$state2 = this.state,\n          errorCheck = _this$state2.errorCheck,\n          businessName = _this$state2.businessName,\n          streetAddress = _this$state2.streetAddress,\n          city = _this$state2.city,\n          zipCode = _this$state2.zipCode,\n          state = _this$state2.state,\n          merchantDescription = _this$state2.merchantDescription,\n          email = _this$state2.email;\n      businessName = businessName.trim();\n      streetAddress = streetAddress.trim();\n      email = email.trim();\n      merchantDescription = merchantDescription.trim();\n      city = city.trim();\n      state = state.trim();\n      var item = store.get('product');\n\n      var redirectToHome = function redirectToHome() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/index');\n      };\n\n      return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n        sectioned: true\n      }, __jsx(Heading, null, \"Voucher Display Form: \", item ? item.title : ''), __jsx(TextStyle, {\n        variation: \"subdued\"\n      }, \"Fill in the data below for the merchant corresponding to this product.\"), \" \", __jsx(\"br\", null), __jsx(\"br\", null), __jsx(FormLayout, null, __jsx(TextField, {\n        autoFocus: true,\n        prefix: \"\",\n        value: this.state.businessName,\n        onChange: this.handleChange('businessName'),\n        label: \"Merchant's Name \\u2013 As displayed in Google Maps\",\n        type: \"text\",\n        placeholder: \"Bob's Burger Shack\",\n        maxLength: 150,\n        error: errorCheck && !businessName.length ? \"Merchant's name is required.\" : null\n      }), __jsx(TextField, {\n        error: errorCheck && !merchantDescription.length ? \"Merchant description is required.\" : null,\n        prefix: \"\",\n        value: this.state.merchantDescription,\n        onChange: this.handleChange('merchantDescription'),\n        label: \"Merchant Description\",\n        type: \"text\",\n        maxLength: 800,\n        showCharacterCount: true,\n        spellCheck: true,\n        multiline: true,\n        placeholder: \"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\"\n      }), __jsx(TextField, {\n        error: errorCheck && !email.length ? \"Email to customer is required.\" : errorCheck && !email.includes(\"{{Auto-Generated Link}}\") ? \"Please include: {{Auto-Generated Link}}\" : null,\n        prefix: \"\",\n        value: this.state.email,\n        onChange: this.handleChange('email'),\n        label: \"Email\",\n        type: \"text\",\n        maxLength: 400,\n        showCharacterCount: true,\n        spellCheck: true,\n        multiline: true,\n        helpText: \"Server code will look for \\\"{{Auto-Generated Link}}\\\" to replace with email. PLACE IT ANYWHERE, BUT DO NOT DELETE IT!\",\n        placeholder: \"Thank you for your purchase! Your link is: {{Auto-Generated Link}}. Enjoy!\"\n      }), __jsx(Subheading, null, \"Address\"), __jsx(FormLayout.Group, {\n        condensed: true\n      }, __jsx(TextField, {\n        error: errorCheck && !streetAddress.length ? \"Street address is required.\" : null,\n        maxLength: 75,\n        prefix: \"\",\n        value: this.state.streetAddress,\n        onChange: this.handleChange('streetAddress'),\n        label: \"Street Address\",\n        type: \"text\",\n        placeholder: \"48185 Washington Blvd.\"\n      }), __jsx(TextField, (_jsx = {\n        error: errorCheck && !city.length ? \"City name is required.\" : null,\n        maxLength: 50,\n        prefix: \"\",\n        value: this.state.city,\n        onChange: this.handleChange('city'),\n        label: \"City\",\n        type: \"text\"\n      }, _defineProperty(_jsx, \"label\", \"City\"), _defineProperty(_jsx, \"placeholder\", \"Seattle\"), _jsx)), __jsx(TextField, {\n        error: errorCheck && !zipCode ? \"Zip code is required.\" : null,\n        maxLength: 5,\n        prefix: \"\",\n        label: \"Zip Code\",\n        value: this.state.zipCode,\n        onChange: this.handleChange('zipCode'),\n        placeholder: \"90210\",\n        type: \"number\"\n      }), __jsx(TextField, {\n        error: errorCheck && !state.length ? \"State is required.\" : null,\n        maxLength: 2,\n        prefix: \"\",\n        label: \"State\",\n        value: this.state.state,\n        onChange: this.handleChange('state'),\n        placeholder: \"WA\"\n      })))), __jsx(PageActions, {\n        primaryAction: [{\n          content: 'Save',\n          onAction: function onAction() {\n            _this2.handleSubmit(item);\n          }\n        }],\n        secondaryActions: [{\n          content: 'Return To List',\n          onAction: function onAction() {\n            redirectToHome();\n          }\n        }]\n      }))))));\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\n_defineProperty(EditProduct, \"contextType\", Context);\n\nexport default EditProduct; // const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Subheading","Form","FormLayout","Frame","Layout","TextStyle","Page","PageActions","TextField","Heading","Button","store","gql","Redirect","Context","Mutation","EditProduct","businessName","streetAddress","city","zipCode","state","merchantDescription","email","errorCheck","field","value","setState","item","trim","length","newItems","app","context","get","redirectToHome","redirect","create","dispatch","Action","APP","title","handleChange","includes","content","onAction","handleSubmit","React","Component"],"mappings":"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","sourcesContent":["import {\n  Banner, Card, DisplayText, Subheading,\n  Form, FormLayout, Frame, Layout, TextStyle,\n  Page, PageActions, TextField, Heading, Button\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { Mutation } from 'react-apollo';\n\n\nclass EditProduct extends React.Component {\n  state = {\n    businessName: '',\n    streetAddress: '',\n    city: '',\n    zipCode: '',\n    state: '',\n    merchantDescription: '',\n    email: '{{Auto-Generated Link}}',\n    errorCheck: false,\n  };\n\n  static contextType = Context;\n\n  render() {\n    const app = this.context;\n    let { errorCheck, businessName, streetAddress, city, zipCode, state, merchantDescription, email } = this.state;\n    businessName = businessName.trim(); streetAddress = streetAddress.trim(); email = email.trim();\n    merchantDescription = merchantDescription.trim(); city = city.trim(); state = state.trim();\n    const item = store.get('product');\n    const redirectToHome = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(\n        Redirect.Action.APP,\n        '/index',\n      )\n    }\n    return (\n      <Frame>\n        <Page>\n          <Layout>\n            <Layout.Section>\n              {/* <DisplayText size=\"large\">{item ? item.title : \"LOADING\"}</DisplayText> */}\n              <Form>\n                <Card sectioned>\n                  <Heading>Voucher Display Form: {item ? item.title : ''}</Heading>\n                  <TextStyle variation=\"subdued\">Fill in the data below for the merchant corresponding to this product.</TextStyle> <br /><br />\n                  <FormLayout>\n                    {/* <Subheading>About</Subheading> */}\n                    <TextField autoFocus={true} prefix=\"\" value={this.state.businessName} onChange={this.handleChange('businessName')}\n                      label=\"Merchant's Name – As displayed in Google Maps\" type=\"text\" placeholder=\"Bob's Burger Shack\" maxLength={150}\n                      error={errorCheck && !businessName.length ? \"Merchant's name is required.\" : null} />\n                    <TextField error={errorCheck && !merchantDescription.length ? \"Merchant description is required.\" : null} prefix=\"\" value={this.state.merchantDescription}\n                      onChange={this.handleChange('merchantDescription')} label=\"Merchant Description\" type=\"text\" maxLength={800}\n                      showCharacterCount={true} spellCheck={true} multiline={true}\n                      placeholder=\"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\" />\n                    <TextField error={errorCheck && !email.length ? \"Email to customer is required.\" : errorCheck && !email.includes(\"{{Auto-Generated Link}}\") ? \"Please include: {{Auto-Generated Link}}\" : null} prefix=\"\" value={this.state.email}\n                      onChange={this.handleChange('email')} label=\"Email\" type=\"text\" maxLength={400}\n                      showCharacterCount={true} spellCheck={true} multiline={true} helpText={`Server code will look for \"{{Auto-Generated Link}}\" to replace with email. PLACE IT ANYWHERE, BUT DO NOT DELETE IT!`}\n                      placeholder=\"Thank you for your purchase! Your link is: {{Auto-Generated Link}}. Enjoy!\" />\n                    <Subheading>Address</Subheading>\n                    <FormLayout.Group condensed>\n                      <TextField error={errorCheck && !streetAddress.length ? \"Street address is required.\" : null} maxLength={75} prefix=\"\" value={this.state.streetAddress} onChange={this.handleChange('streetAddress')}\n                        label=\"Street Address\" type=\"text\" placeholder=\"48185 Washington Blvd.\" />\n                      <TextField error={errorCheck && !city.length ? \"City name is required.\" : null} maxLength={50} prefix=\"\" value={this.state.city} onChange={this.handleChange('city')}\n                        label=\"City\" type=\"text\" label=\"City\" placeholder=\"Seattle\" />\n                      <TextField error={errorCheck && !zipCode ? \"Zip code is required.\" : null} maxLength={5} prefix=\"\" label=\"Zip Code\" value={this.state.zipCode} onChange={this.handleChange('zipCode')}\n                        placeholder=\"90210\" type=\"number\" />\n                      <TextField error={errorCheck && !state.length ? \"State is required.\" : null} maxLength={2} prefix=\"\" label=\"State\" value={this.state.state} onChange={this.handleChange('state')}\n                        placeholder=\"WA\" />\n                    </FormLayout.Group>\n                  </FormLayout>\n                </Card>\n                <PageActions\n                  primaryAction={[{\n                    content: 'Save', onAction: () => {\n                      this.handleSubmit(item);\n                    }\n                  }]}\n                  secondaryActions={[{\n                    content: 'Return To List',\n                    onAction: () => {\n                      redirectToHome();\n                    }\n                  }]} />\n              </Form>\n            </Layout.Section>\n          </Layout>\n        </Page>\n      </Frame>\n    );\n  }\n\n  handleChange = (field) => {\n    return (value) => this.setState({ [field]: value });\n  }\n  handleSubmit = (item) => {\n    this.setState({ errorCheck: true });\n    let { businessName, streetAddress, city, zipCode, state, merchantDescription } = this.state;\n    businessName = businessName.trim(); streetAddress = streetAddress.trim();\n    merchantDescription = merchantDescription.trim(); city = city.trim(); state = state.trim();\n    if (businessName.length && streetAddress.length && city.length && state.length && merchantDescription.length && zipCode) {\n      let newItems = { businessName, streetAddress, merchantDescription, city, state, zipCode, ...item }\n      //Set Loading\n      //Post to Database\n    }\n  }\n}\n\nexport default EditProduct;\n\n// const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;\n"]},"metadata":{},"sourceType":"module"}