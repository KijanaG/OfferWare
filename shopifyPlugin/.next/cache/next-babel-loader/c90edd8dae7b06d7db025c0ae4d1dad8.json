{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      var twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n      console.log(\"YYYYYYY\", store.get('ids'));\n      return __jsx(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get('ids') ? store.get('ids') : null\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n        if (error) return __jsx(\"div\", null, error.message);\n        return __jsx(Card, null, __jsx(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          renderItem: function renderItem(item) {\n            var media = __jsx(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n            });\n\n            var price = item.variants.edges[0].node.price;\n            return __jsx(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.title),\n              onClick: function onClick() {\n                store.set('item', item);\n                redirectToProduct();\n              }\n            }, __jsx(Stack, null, __jsx(Stack.Item, {\n              fill: true\n            }, __jsx(\"h3\", null, \" \", __jsx(TextStyle, {\n              variation: \"strong\"\n            }, \" \", item.title, \" \"), \" \")), __jsx(Stack.Item, null, \" \", __jsx(\"p\", null, \"$\", price), \" \"), __jsx(Stack.Item, null, \" \", __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"), \" \")));\n          }\n        }));\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","ResourceListWithProducts","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","now","toDateString","console","log","get","GET_PRODUCTS_BY_ID","ids","data","loading","error","message","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title","set","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nclass ResourceListWithProducts extends React.Component {\n\n    static contextType = Context;\n\n    render() {\n        const app = this.context;\n        const redirectToProduct = () => {\n            const redirect = Redirect.create(app);\n            redirect.dispatch(\n                Redirect.Action.APP,\n                '/edit-products',\n            )\n        }\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n        console.log(\"YYYYYYY\", store.get('ids'))\n        return (\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') ? store.get('ids') : null }}>\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loadingâ€¦</div>;\n                    if (error) return <div>{error.message}</div>;\n                    return (\n                        <Card>\n                            <ResourceList\n                                showHeader\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\n                                items={data.nodes}\n                                renderItem={item => {\n                                    const media = (\n                                        <Thumbnail\n                                            source={item.images.edges[0] ? item.images.edges[0].node.originalSrc : ''}\n                                            alt={item.images.edges[0] ? item.images.edges[0].node.altText : ''} />\n                                    );\n                                    const price = item.variants.edges[0].node.price;\n                                    return (\n                                        <ResourceList.Item id={item.id} media={media}\n                                            accessibilityLabel={`View details for ${item.title}`}\n                                            onClick={() => {\n                                                store.set('item', item);\n                                                redirectToProduct();\n                                            }} >\n                                            <Stack>\n                                                <Stack.Item fill>\n                                                    <h3> <TextStyle variation=\"strong\"> {item.title} </TextStyle> </h3>\n                                                </Stack.Item>\n                                                <Stack.Item> <p>${price}</p> </Stack.Item>\n                                                <Stack.Item> <p>Expires on {twoWeeksFromNow} </p> </Stack.Item>\n                                            </Stack>\n                                        </ResourceList.Item>\n                                    );\n                                }}\n                            />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;"]},"metadata":{},"sourceType":"module"}