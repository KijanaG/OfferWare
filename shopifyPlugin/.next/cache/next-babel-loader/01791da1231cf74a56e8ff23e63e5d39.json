{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Banner, Card, DisplayText, Subheading, Form, FormLayout, Frame, Layout, TextStyle, Page, PageActions, TextField, Heading, Button } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { Mutation } from 'react-apollo';\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      businessName: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      state: '',\n      merchantDescription: '',\n      errorCheck: false\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", item => {\n      this.setState({\n        errorCheck: true\n      });\n      let {\n        businessName,\n        streetAddress,\n        city,\n        zipCode,\n        state,\n        merchantDescription\n      } = this.state;\n      businessName = businessName.trim();\n      streetAddress = streetAddress.trim();\n      merchantDescription = merchantDescription.trim();\n      city = city.trim();\n      state = state.trim();\n\n      let newItems = _objectSpread({\n        businessName,\n        streetAddress,\n        merchantDescription,\n        city,\n        state,\n        zipCode\n      }, item);\n\n      console.log(\"^^\", newItems);\n    });\n  }\n\n  render() {\n    const app = this.context;\n    let {\n      errorCheck,\n      businessName,\n      streetAddress,\n      city,\n      zipCode,\n      state,\n      merchantDescription\n    } = this.state;\n    businessName = businessName.trim();\n    streetAddress = streetAddress.trim();\n    merchantDescription = merchantDescription.trim();\n    city = city.trim();\n    state = state.trim();\n    const item = store.get('product');\n\n    const redirectToHome = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/index');\n    };\n\n    return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(Heading, null, \"Voucher Display Form: \", item ? item.title : ''), __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, \"Fill in the data below for the merchant corresponding to this product.\"), \" \", __jsx(\"br\", null), __jsx(\"br\", null), __jsx(FormLayout, null, __jsx(TextField, {\n      autoFocus: true,\n      prefix: \"\",\n      value: this.state.businessName,\n      onChange: this.handleChange('businessName'),\n      label: \"Merchant's Name \\u2013 As displayed in Google Maps\",\n      type: \"text\",\n      placeholder: \"Bob's Burger Shack\",\n      maxLength: 150,\n      error: errorCheck && !businessName.length ? \"Merchant's name is required.\" : null\n    }), __jsx(TextField, {\n      error: errorCheck && !merchantDescription.length ? \"Merchant description is required.\" : null,\n      prefix: \"\",\n      value: this.state.merchantDescription,\n      onChange: this.handleChange('merchantDescription'),\n      label: \"Merchant Description\",\n      type: \"text\",\n      maxLength: 800,\n      showCharacterCount: true,\n      spellCheck: true,\n      multiline: true,\n      placeholder: \"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\"\n    }), __jsx(Subheading, null, \"Address\"), __jsx(FormLayout.Group, {\n      condensed: true\n    }, __jsx(TextField, {\n      error: errorCheck && !streetAddress.length ? \"Street address is required.\" : null,\n      maxLength: 75,\n      prefix: \"\",\n      value: this.state.streetAddress,\n      onChange: this.handleChange('streetAddress'),\n      label: \"Street Address\",\n      type: \"text\",\n      placeholder: \"48185 Washington Blvd.\"\n    }), __jsx(TextField, {\n      error: errorCheck && !city.length ? \"City name is required.\" : null,\n      maxLength: 50,\n      prefix: \"\",\n      value: this.state.city,\n      onChange: this.handleChange('city'),\n      label: \"City\",\n      type: \"text\",\n      label: \"City\",\n      placeholder: \"Seattle\"\n    }), __jsx(TextField, {\n      error: errorCheck && !zipCode ? \"Zip code is required.\" : null,\n      maxLength: 5,\n      prefix: \"\",\n      label: \"Zip Code\",\n      value: this.state.zipCode,\n      onChange: this.handleChange('zipCode'),\n      placeholder: \"90210\",\n      type: \"number\"\n    }), __jsx(TextField, {\n      error: errorCheck && !state.length ? \"State is required.\" : null,\n      maxLength: 2,\n      prefix: \"\",\n      label: \"State\",\n      value: this.state.state,\n      onChange: this.handleChange('state'),\n      placeholder: \"WA\"\n    })))), __jsx(PageActions, {\n      primaryAction: [{\n        content: 'Save',\n        onAction: () => {\n          this.handleSubmit(item);\n        }\n      }],\n      secondaryActions: [{\n        content: 'Return To List',\n        onAction: () => {\n          redirectToHome();\n        }\n      }]\n    }))))));\n  }\n\n}\n\n_defineProperty(EditProduct, \"contextType\", Context);\n\nexport default EditProduct; // const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Subheading","Form","FormLayout","Frame","Layout","TextStyle","Page","PageActions","TextField","Heading","Button","store","gql","Redirect","Context","Mutation","EditProduct","React","Component","businessName","streetAddress","city","zipCode","state","merchantDescription","errorCheck","field","value","setState","item","trim","newItems","console","log","render","app","context","get","redirectToHome","redirect","create","dispatch","Action","APP","title","handleChange","length","content","onAction","handleSubmit"],"mappings":"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","sourcesContent":["import {\n  Banner, Card, DisplayText, Subheading,\n  Form, FormLayout, Frame, Layout, TextStyle,\n  Page, PageActions, TextField, Heading, Button\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { Mutation } from 'react-apollo';\n\n\nclass EditProduct extends React.Component {\n  state = {\n    businessName: '',\n    streetAddress: '',\n    city: '',\n    zipCode: '',\n    state: '',\n    merchantDescription: '',\n    errorCheck: false,\n  };\n\n  static contextType = Context;\n\n  render() {\n    const app = this.context;\n    let { errorCheck, businessName, streetAddress, city, zipCode, state, merchantDescription } = this.state;\n    businessName = businessName.trim(); streetAddress = streetAddress.trim();\n    merchantDescription = merchantDescription.trim(); city = city.trim(); state = state.trim();\n    const item = store.get('product');\n    const redirectToHome = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(\n        Redirect.Action.APP,\n        '/index',\n      )\n    }\n    return (\n      <Frame>\n        <Page>\n          <Layout>\n            <Layout.Section>\n              {/* <DisplayText size=\"large\">{item ? item.title : \"LOADING\"}</DisplayText> */}\n              <Form>\n                <Card sectioned>\n                  <Heading>Voucher Display Form: {item ? item.title : ''}</Heading>\n                  <TextStyle variation=\"subdued\">Fill in the data below for the merchant corresponding to this product.</TextStyle> <br /><br />\n                  <FormLayout>\n                    {/* <Subheading>About</Subheading> */}\n                    <TextField autoFocus={true} prefix=\"\" value={this.state.businessName} onChange={this.handleChange('businessName')}\n                      label=\"Merchant's Name – As displayed in Google Maps\" type=\"text\" placeholder=\"Bob's Burger Shack\" maxLength={150}\n                      error={errorCheck && !businessName.length ? \"Merchant's name is required.\" : null} />\n                    <TextField error={errorCheck && !merchantDescription.length ? \"Merchant description is required.\" : null} prefix=\"\" value={this.state.merchantDescription}\n                      onChange={this.handleChange('merchantDescription')} label=\"Merchant Description\" type=\"text\" maxLength={800}\n                      showCharacterCount={true} spellCheck={true} multiline={true}\n                      placeholder=\"Bob's Burger Shack is a gourmet dine-in restaurant located in the Financial District of Downtown Seattle. They're known for...\" />\n                    <Subheading>Address</Subheading>\n                    <FormLayout.Group condensed>\n                      <TextField error={errorCheck && !streetAddress.length ? \"Street address is required.\" : null} maxLength={75} prefix=\"\" value={this.state.streetAddress} onChange={this.handleChange('streetAddress')}\n                        label=\"Street Address\" type=\"text\" placeholder=\"48185 Washington Blvd.\" />\n                      <TextField error={errorCheck && !city.length ? \"City name is required.\" : null} maxLength={50} prefix=\"\" value={this.state.city} onChange={this.handleChange('city')}\n                        label=\"City\" type=\"text\" label=\"City\" placeholder=\"Seattle\" />\n                      <TextField error={errorCheck && !zipCode ? \"Zip code is required.\" : null} maxLength={5} prefix=\"\" label=\"Zip Code\" value={this.state.zipCode} onChange={this.handleChange('zipCode')}\n                        placeholder=\"90210\" type=\"number\" />\n                      <TextField error={errorCheck && !state.length ? \"State is required.\" : null} maxLength={2} prefix=\"\" label=\"State\" value={this.state.state} onChange={this.handleChange('state')}\n                        placeholder=\"WA\" />\n                    </FormLayout.Group>\n                  </FormLayout>\n                </Card>\n                <PageActions\n                  primaryAction={[{\n                    content: 'Save', onAction: () => {\n                      this.handleSubmit(item);\n                    }\n                  }]}\n                  secondaryActions={[{\n                    content: 'Return To List',\n                    onAction: () => {\n                      redirectToHome();\n                    }\n                  }]} />\n              </Form>\n            </Layout.Section>\n          </Layout>\n        </Page>\n      </Frame>\n    );\n  }\n\n  handleChange = (field) => {\n    return (value) => this.setState({ [field]: value });\n  }\n  handleSubmit = (item) => {\n    this.setState({ errorCheck: true });\n    let { businessName, streetAddress, city, zipCode, state, merchantDescription } = this.state;\n    businessName = businessName.trim(); streetAddress = streetAddress.trim();\n    merchantDescription = merchantDescription.trim(); city = city.trim(); state = state.trim();\n    let newItems = { businessName, streetAddress, merchantDescription, city, state, zipCode, ...item }\n    console.log(\"^^\", newItems)\n  }\n}\n\nexport default EditProduct;\n\n// const UPDATE_PRICE = gql`\n//   mutation productVariantUpdate($input: ProductVariantInput!) {\n//     productVariantUpdate(input: $input) {\n//       product {\n//         title\n//       }\n//       productVariant {\n//         id\n//         price\n//       }\n//     }\n//   }\n// `;\n"]},"metadata":{},"sourceType":"module"}