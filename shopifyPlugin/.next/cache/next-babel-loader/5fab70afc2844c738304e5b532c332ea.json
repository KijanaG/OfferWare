{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar ErrorBoundary = /*#__PURE__*/function (_Component) {\n  _inherits(ErrorBoundary, _Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidCatch\", function (error, errorInfo) {\n      return catchFunc(error, errorInfo, _assertThisInitialized(_this));\n    });\n\n    _this.state = {\n      error: null,\n      errorInfo: null\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.errorInfo) {\n        return handleError(this);\n      } // Normally, just render children\n\n\n      return this.props.children;\n    }\n  }]);\n\n  return ErrorBoundary;\n}(Component);\n\nexport { ErrorBoundary as default };\nexport var withErrorBoundary = function withErrorBoundary(WrappedComponent) {\n  var _temp;\n\n  return _temp = /*#__PURE__*/function (_Component2) {\n    _inherits(_temp, _Component2);\n\n    var _super2 = _createSuper(_temp);\n\n    function _temp(props) {\n      var _this2;\n\n      _classCallCheck(this, _temp);\n\n      _this2 = _super2.call(this, props);\n\n      _defineProperty(_assertThisInitialized(_this2), \"componentDidCatch\", function (error, errorInfo) {\n        return catchFunc(error, errorInfo, _assertThisInitialized(_this2));\n      });\n\n      _this2.state = {\n        error: null,\n        errorInfo: null\n      };\n      return _this2;\n    }\n\n    _createClass(_temp, [{\n      key: \"render\",\n      value: function render() {\n        if (this.state.errorInfo) {\n          return handleError(this);\n        } // Normally, just render children\n\n\n        return __jsx(WrappedComponent, this.props);\n      }\n    }]);\n\n    return _temp;\n  }(Component), _temp;\n};\n\nvar catchFunc = function catchFunc(error, errorInfo, ctx) {\n  // catch errors in any components below and re-render with error message\n  ctx.setState({\n    error: error,\n    errorInfo: errorInfo\n  }); // log error messages, etc.\n};\n\nvar handleError = function handleError(ctx) {\n  return (// Error path\n    __jsx(\"div\", {\n      style: ctx.props.style || styles.error\n    }, __jsx(\"h2\", null, \"Something went wrong.\"), __jsx(\"details\", {\n      style: {\n        whiteSpace: 'pre-wrap'\n      }\n    }, ctx.state.error && ctx.state.error.toString(), __jsx(\"br\", null), ctx.state.errorInfo.componentStack))\n  );\n};\n\nvar styles = {\n  error: {\n    backgroundColor: '#f98e7e',\n    borderTop: '1px solid #777',\n    borderBottom: '1px solid #777',\n    padding: '12px'\n  }\n};","map":null,"metadata":{},"sourceType":"module"}