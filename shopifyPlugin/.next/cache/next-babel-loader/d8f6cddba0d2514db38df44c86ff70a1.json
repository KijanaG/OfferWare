{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 10) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Page, Layout, TextStyle, EmptyState, Spinner } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport ResourceListWithProducts from '../components/ResourceList';\nvar img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      open: false,\n      loading: true,\n      products: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelection\", function _callee(resources) {\n      var idsFromResources;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              idsFromResources = resources.selection.map(function (product) {\n                return product.id;\n              });\n\n              _this.setState({\n                open: false\n              });\n\n              console.log(idsFromResources);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getProducts(idsFromResources));\n\n            case 5:\n              store.set('ids', idsFromResources);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchProducts\", function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"IN Here fetchProducts()\");\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch('/api/products').then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                return response;\n              })[\"catch\"](function (err) {\n                alert(err);\n                return null;\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var products;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(\"Did MOUNT\");\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(this.fetchProducts());\n\n            case 3:\n              products = _context3.sent;\n              console.log(\"PRODUCTS: \", products);\n              if (products.data == \"Delicious panther\") //IF not products , show \n                //Set products in state\n                this.setState({\n                  loading: false\n                });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"UNMOUNTINGIGNIG\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var emptyState = this.state.products;\n      var loading = this.state.loading;\n      if (loading) return __jsx(Page, null, __jsx(Layout, null, __jsx(EmptyState, {\n        centeredLayout: true,\n        heading: 'Fetching Products from Database...'\n      }, __jsx(Spinner, {\n        accessibilityLabel: \"Spinner\",\n        size: \"large\",\n        color: \"inkLightest\"\n      }))));\n      return __jsx(Page, null, __jsx(TitleBar, {\n        primaryAction: {\n          content: 'Select services',\n          onAction: function onAction() {\n            return _this2.setState({\n              open: true\n            });\n          }\n        }\n      }), __jsx(ResourcePicker, {\n        resourceType: \"Product\",\n        showVariants: false,\n        open: this.state.open,\n        onSelection: function onSelection(resources) {\n          return _this2.handleSelection(resources);\n        },\n        onCancel: function onCancel() {\n          return _this2.setState({\n            open: false\n          });\n        }\n      }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n        heading: \"Send Vouchers to your customers to be redeemed in-store.\",\n        action: {\n          content: 'Select Services',\n          onAction: function onAction() {\n            return _this2.setState({\n              open: true\n            });\n          }\n        },\n        image: img\n      }, __jsx(\"p\", null, \"Select products/services for which to send vouchers to customers via email.\"))) : __jsx(ResourceListWithProducts, null));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;\n\nfunction getProducts(idsFromResources) {\n  var _useQuery, loading, error, data;\n\n  return _regeneratorRuntime.async(function getProducts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n            variables: {\n              ids: idsFromResources\n            }\n          }), loading = _useQuery.loading, error = _useQuery.error, data = _useQuery.data;\n          console.log(loading, error, data, \"HELOO BOOIOIOIO we out here\");\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());","map":{"version":3,"sources":["/Users/kjgarrett/Desktop/Deals/shopifyPlugin/pages/index.js"],"names":["Page","Layout","TextStyle","EmptyState","Spinner","ResourcePicker","TitleBar","store","gql","useQuery","ResourceListWithProducts","img","Index","open","loading","products","resources","idsFromResources","selection","map","product","id","setState","console","log","getProducts","set","fetch","then","res","json","response","err","alert","fetchProducts","data","emptyState","state","content","onAction","handleSelection","React","Component","GET_PRODUCTS_BY_ID","variables","ids","error"],"mappings":"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","sourcesContent":["import { Page, Layout, TextStyle, EmptyState, Spinner } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport ResourceListWithProducts from '../components/ResourceList';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n    state = { open: false, loading: true, products: null };\n\n    async componentDidMount() {\n        console.log(\"Did MOUNT\")\n        let products = await this.fetchProducts();\n        console.log(\"PRODUCTS: \", products)\n        if (products.data == \"Delicious panther\") //IF not products , show \n            //Set products in state\n            this.setState({ loading: false })\n    }\n\n    componentWillUnmount() {\n        console.log(\"UNMOUNTINGIGNIG\")\n    }\n    render() {\n        const emptyState = this.state.products;\n        const { loading } = this.state;\n        if (loading) return (\n            <Page>\n                <Layout>\n                    <EmptyState centeredLayout heading={'Fetching Products from Database...'}>\n                        <Spinner accessibilityLabel=\"Spinner\" size=\"large\" color=\"inkLightest\" />\n                    </EmptyState>\n                </Layout>\n            </Page>\n        )\n        return (\n            <Page>\n                <TitleBar\n                    primaryAction={{\n                        content: 'Select services',\n                        onAction: () => this.setState({ open: true })\n                    }} />\n                <ResourcePicker\n                    resourceType=\"Product\"\n                    showVariants={false}\n                    open={this.state.open}\n                    onSelection={(resources) => this.handleSelection(resources)}\n                    onCancel={() => this.setState({ open: false })}\n                />\n                {emptyState ? (\n                    <Layout>\n                        {/* <TextStyle variation=\"positive\">Let's get this BREAD AAASSSAAAPPP</TextStyle> */}\n                        <EmptyState\n                            heading=\"Send Vouchers to your customers to be redeemed in-store.\"\n                            action={{\n                                content: 'Select Services',\n                                onAction: () => this.setState({ open: true })\n                            }}\n                            image={img}>\n                            <p>Select products/services for which to send vouchers to customers via email.</p>\n                        </EmptyState>\n                    </Layout>\n                ) : (\n                        <ResourceListWithProducts />\n                    )}\n            </Page>\n        );\n    }\n    handleSelection = async (resources) => {\n        const idsFromResources = resources.selection.map((product) => product.id)\n        this.setState({ open: false })\n        console.log(idsFromResources)\n        await getProducts(idsFromResources)\n        store.set('ids', idsFromResources)\n    }\n    fetchProducts = async () => {\n        console.log(\"IN Here fetchProducts()\")\n        return await fetch('/api/products')\n            .then(res => res.json())\n            .then(response => {\n                return response\n            })\n            .catch(err => {\n                alert(err)\n                return null\n            })\n    }\n}\n\nexport default Index;\n\nasync function getProducts(idsFromResources) {\n    const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: idsFromResources } })\n    console.log(loading, error, data, \"HELOO BOOIOIOIO we out here\")\n}\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 10) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}